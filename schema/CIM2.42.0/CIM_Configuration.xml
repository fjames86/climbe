<?xml version="1.0"?>
<CIM CIMVERSION="2.3" DTDVERSION="2.2"><DECLARATION><DECLGROUP><VALUE.OBJECT>
<CLASS SUPERCLASS="CIM_ManagedElement" NAME="CIM_Configuration"><QUALIFIER TOSUBCLASS="false" NAME="Deprecated" TYPE="string"><VALUE.ARRAY><VALUE>CIM_SettingData</VALUE><VALUE>CIM_Setting</VALUE></VALUE.ARRAY></QUALIFIER><QUALIFIER TOSUBCLASS="false" TRANSLATABLE="true" NAME="Version" TYPE="string"><VALUE>2.10.0</VALUE></QUALIFIER><QUALIFIER NAME="UMLPackagePath" TYPE="string"><VALUE>CIM::Core::Settings</VALUE></QUALIFIER><QUALIFIER TRANSLATABLE="true" NAME="Description" TYPE="string"><VALUE>Note: The use of CIM_Configuration is deprecated in favor of aggregating instances of Setting or SettingData into &quot;higher-level&quot; Settings or SettingData objects using the ConcreteComponent association. This association simplifies the use of Settings or SettingData. With Configurations serving as aggregations of Settings (as defined by the Configuration Component relationship), separate associations were needed for the aggregation and to tie an element to either its Configurations or Settings or SettingData. These separate associations introduced unnecessary complexity and redundancy into the model. 
Deprecated description: The Configuration object allows the grouping of sets of parameters (defined in Setting objects) and dependencies for one or more ManagedSystemElements. It represents a certain behavior or a desired functional state for the ManagedSystemElements. The desired functional state of the Configuration is typically driven by external requirements such as time or location. For example, to connect to a Mail System from home, a dependency on a modem exists, but a dependency on a network adapter exists at work. Settings for the pertinent LogicalDevices (in this example, POTSModem and NetworkAdapter) can be defined and aggregated by the Configuration. Therefore, two &quot;Connect to Mail&quot; Configurations can be defined by grouping the relevant dependencies and Setting objects.</VALUE></QUALIFIER><PROPERTY CLASSORIGIN="CIM_Configuration" PROPAGATED="false" NAME="Name" TYPE="string"><QUALIFIER TOSUBCLASS="false" NAME="Deprecated" TYPE="string"><VALUE.ARRAY><VALUE>CIM_SettingData.InstanceID</VALUE><VALUE>CIM_Setting.SettingID</VALUE></VALUE.ARRAY></QUALIFIER><QUALIFIER OVERRIDABLE="false" NAME="Key" TYPE="boolean"><VALUE>true</VALUE></QUALIFIER><QUALIFIER TRANSLATABLE="true" NAME="Description" TYPE="string"><VALUE>Note: The use of this element is deprecated. Deprecated description: The label by which the Configuration object is known.</VALUE></QUALIFIER><QUALIFIER NAME="MaxLen" TYPE="uint32"><VALUE>256</VALUE></QUALIFIER></PROPERTY><PROPERTY CLASSORIGIN="CIM_ManagedElement" PROPAGATED="true" NAME="InstanceID" TYPE="string"><QUALIFIER TRANSLATABLE="true" NAME="Description" TYPE="string"><VALUE>InstanceID is an optional property that may be used to opaquely and uniquely identify an instance of this class within the scope of the instantiating Namespace. Various subclasses of this class may override this property to make it required, or a key. Such subclasses may also modify the preferred algorithms for ensuring uniqueness that are defined below.
To ensure uniqueness within the NameSpace, the value of InstanceID should be constructed using the following &quot;preferred&quot; algorithm: 
&lt;OrgID&gt;:&lt;LocalID&gt; 
Where &lt;OrgID&gt; and &lt;LocalID&gt; are separated by a colon (:), and where &lt;OrgID&gt; must include a copyrighted, trademarked, or otherwise unique name that is owned by the business entity that is creating or defining the InstanceID or that is a registered ID assigned to the business entity by a recognized global authority. (This requirement is similar to the &lt;Schema Name&gt;_&lt;Class Name&gt; structure of Schema class names.) In addition, to ensure uniqueness, &lt;OrgID&gt; must not contain a colon (:). When using this algorithm, the first colon to appear in InstanceID must appear between &lt;OrgID&gt; and &lt;LocalID&gt;. 
&lt;LocalID&gt; is chosen by the business entity and should not be reused to identify different underlying (real-world) elements. If not null and the above &quot;preferred&quot; algorithm is not used, the defining entity must assure that the resulting InstanceID is not reused across any InstanceIDs produced by this or other providers for the NameSpace of this instance. 
If not set to null for DMTF-defined instances, the &quot;preferred&quot; algorithm must be used with the &lt;OrgID&gt; set to CIM.</VALUE></QUALIFIER></PROPERTY><PROPERTY CLASSORIGIN="CIM_ManagedElement" PROPAGATED="true" NAME="Caption" TYPE="string"><QUALIFIER TRANSLATABLE="true" NAME="Description" TYPE="string"><VALUE>The Caption property is a short textual description (one- line string) of the object.</VALUE></QUALIFIER><QUALIFIER NAME="MaxLen" TYPE="uint32"><VALUE>64</VALUE></QUALIFIER></PROPERTY><PROPERTY CLASSORIGIN="CIM_ManagedElement" PROPAGATED="true" NAME="Description" TYPE="string"><QUALIFIER TRANSLATABLE="true" NAME="Description" TYPE="string"><VALUE>The Description property provides a textual description of the object.</VALUE></QUALIFIER></PROPERTY><PROPERTY CLASSORIGIN="CIM_ManagedElement" PROPAGATED="true" NAME="ElementName" TYPE="string"><QUALIFIER TRANSLATABLE="true" NAME="Description" TYPE="string"><VALUE>A user-friendly name for the object. This property allows each instance to define a user-friendly name in addition to its key properties, identity data, and description information. 
Note that the Name property of ManagedSystemElement is also defined as a user-friendly name. But, it is often subclassed to be a Key. It is not reasonable that the same property can convey both identity and a user-friendly name, without inconsistencies. Where Name exists and is not a Key (such as for instances of LogicalDevice), the same information can be present in both the Name and ElementName properties. Note that if there is an associated instance of CIM_EnabledLogicalElementCapabilities, restrictions on this properties may exist as defined in ElementNameMask and MaxElementNameLen properties defined in that class.</VALUE></QUALIFIER></PROPERTY></CLASS></VALUE.OBJECT></DECLGROUP></DECLARATION></CIM>
