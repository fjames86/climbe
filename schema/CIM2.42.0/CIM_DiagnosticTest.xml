<?xml version="1.0"?>
<CIM CIMVERSION="2.3" DTDVERSION="2.2"><DECLARATION><DECLGROUP><VALUE.OBJECT>
<CLASS SUPERCLASS="CIM_DiagnosticService" NAME="CIM_DiagnosticTest"><QUALIFIER TOSUBCLASS="false" TRANSLATABLE="true" NAME="Version" TYPE="string"><VALUE>2.11.0</VALUE></QUALIFIER><QUALIFIER NAME="UMLPackagePath" TYPE="string"><VALUE>CIM::System::Diagnostics</VALUE></QUALIFIER><QUALIFIER TRANSLATABLE="true" NAME="Description" TYPE="string"><VALUE>The CIM_DiagnosticTest class represents the framework for running diagnostic tests. Specific diagnostic tests may be defined by subclassing and/or instantiating this object. To provide more detail for a type of test(s) (i.e, additional properties and methods), subclassing is appropriate. 
When a DiagnosticTest can be simultaneously executed against several elements, then DiagnosticTest may launch a ConcreteJob to represent each execution.</VALUE></QUALIFIER><PROPERTY.ARRAY CLASSORIGIN="CIM_DiagnosticTest" PROPAGATED="false" NAME="Characteristics" TYPE="uint16"><QUALIFIER TRANSLATABLE="true" NAME="Description" TYPE="string"><VALUE>The descriptions for each Characteristic are below: 

* &quot;Is Exclusive&quot; (value=2) is specified for the test module only if the diagnostic cannot run more than one test at a time, regardless of how many SystemElements are supported. Typically, this occurs when hardware or software constraints prevent the test from running as multiple, concurrent instances. If the diagnostic can be run against multiple SystemElements, but only once per Element, then set the IsExclusiveForMSE boolean property on the appropriate instances of DiagnosticTestForMSE. 

* If &quot;Is Interactive&quot; (value=3) is set, then the diagnostic displays a message either before, during or after testing. 

* Set &quot;Is Destructive&quot; (value=4) if the diagnostic will destroy data, or reconfigure the Element that is being tested. 

* &quot;Is Risky&quot; (value=5) indicates that data loss may occur if the test is interrupted. Some tests make copies of data, perform the test, and restore the data returning the tested entity to its previous configuration. If the test is interrupted, then loss of data or reconfiguration of the tested ManagedSystemElement may occur. 

* If &quot;Is Package&quot; (value=6) is set, this test is actually a set of lower level diagnostics, that are packaged together by the test. This packaging is implemented by the diagnostic test, not aggregated by CIM. Information and results associated with the individual tests in the package may be requested by using the &quot;Subtests&quot; value in the DiagnosticSetting.LogOptions array. 

(value=7) was &quot;Supports PercentOfTestCoverage&quot; in Version 2.6. Value = 7 is being deprecated. Instead, it should be described in DiagnosticServiceCapabilities. 

&quot;Is Synchronous&quot; (value=8) indicates that this diagnostic service will complete before the RunDiagnostic method returns to the caller. A Job is still created that can be accessed by the client for accounting purposes, but the ability to track progress and status of the Job are lost. Additionally, in certain environments, the client may be &quot;blocked&quot; from further action until the service completes. 
&quot;Media Required&quot; (value=9) indicates that this diagnostic service requires that media be inserted into the device in order to perform the service. &quot;Additional Hardware Required&quot; (value=10) indicates that this diagnostic service requires that some additional hardware is installed (e.g., wrap plug) in order to perform the service.</VALUE></QUALIFIER><QUALIFIER NAME="ValueMap" TYPE="string"><VALUE.ARRAY><VALUE>0</VALUE><VALUE>1</VALUE><VALUE>2</VALUE><VALUE>3</VALUE><VALUE>4</VALUE><VALUE>5</VALUE><VALUE>6</VALUE><VALUE>7</VALUE><VALUE>8</VALUE><VALUE>9</VALUE><VALUE>10</VALUE></VALUE.ARRAY></QUALIFIER><QUALIFIER TRANSLATABLE="true" NAME="Values" TYPE="string"><VALUE.ARRAY><VALUE>Unknown</VALUE><VALUE>Other</VALUE><VALUE>Is Exclusive</VALUE><VALUE>Is Interactive</VALUE><VALUE>Is Destructive</VALUE><VALUE>Is Risky</VALUE><VALUE>Is Package</VALUE><VALUE>Reserved</VALUE><VALUE>Is Synchronous</VALUE><VALUE>Media Required</VALUE><VALUE>Additional Hardware Required</VALUE></VALUE.ARRAY></QUALIFIER><QUALIFIER NAME="ModelCorrespondence" TYPE="string"><VALUE.ARRAY><VALUE>CIM_DiagnosticTest.OtherCharacteristicsDescriptions</VALUE></VALUE.ARRAY></QUALIFIER></PROPERTY.ARRAY><PROPERTY CLASSORIGIN="CIM_DiagnosticTest" PROPAGATED="false" NAME="OtherCharacteristicDescription" TYPE="string"><QUALIFIER TOSUBCLASS="false" NAME="Deprecated" TYPE="string"><VALUE.ARRAY><VALUE>CIM_DiagnosticTest.OtherCharacteristicsDescriptions</VALUE></VALUE.ARRAY></QUALIFIER><QUALIFIER TRANSLATABLE="true" NAME="Description" TYPE="string"><VALUE>Provides additional information for the Characteristic when its value is set to 1 (&quot;Other&quot;).</VALUE></QUALIFIER><QUALIFIER NAME="ModelCorrespondence" TYPE="string"><VALUE.ARRAY><VALUE>CIM_DiagnosticTest.Characteristics</VALUE></VALUE.ARRAY></QUALIFIER></PROPERTY><PROPERTY.ARRAY CLASSORIGIN="CIM_DiagnosticTest" PROPAGATED="false" NAME="OtherCharacteristicsDescriptions" TYPE="string"><QUALIFIER TRANSLATABLE="true" NAME="Description" TYPE="string"><VALUE>OtherCharacteristicsDescriptions is a Bag array that contains an element with additional information for each Characteristics element with a value of 1 (&quot;Other&quot;).</VALUE></QUALIFIER><QUALIFIER NAME="ModelCorrespondence" TYPE="string"><VALUE.ARRAY><VALUE>CIM_DiagnosticTest.Characteristics</VALUE></VALUE.ARRAY></QUALIFIER></PROPERTY.ARRAY><PROPERTY CLASSORIGIN="CIM_DiagnosticTest" PROPAGATED="false" NAME="IsInUse" TYPE="boolean"><QUALIFIER TOSUBCLASS="false" NAME="Deprecated" TYPE="string"><VALUE.ARRAY><VALUE>CIM_Service.Started</VALUE></VALUE.ARRAY></QUALIFIER><QUALIFIER TRANSLATABLE="true" NAME="Description" TYPE="string"><VALUE>This property is being deprecated. The boolean Started property inherited from CIM_Service should be used instead. 
If this test is currently being performed, the InUse property is set to TRUE. To determine which ManagedSystem Element is being tested, query the DiagnosticResult objects associated with this test (query DiagnosticResultForTest), and for which the TestState equals 4 (&quot;In Progress&quot;). The DiagnosticResult object is associated with the System Element under test, using DiagnosticResultForMSE.</VALUE></QUALIFIER></PROPERTY><PROPERTY.ARRAY CLASSORIGIN="CIM_DiagnosticTest" PROPAGATED="false" NAME="ResourcesUsed" TYPE="uint16"><QUALIFIER TOSUBCLASS="false" NAME="Deprecated" TYPE="string"><VALUE.ARRAY><VALUE>CIM_ServiceAffectsElement</VALUE></VALUE.ARRAY></QUALIFIER><QUALIFIER TRANSLATABLE="true" NAME="Description" TYPE="string"><VALUE>This property is being deprecated and replaced with a more general method for indicating Managed Elements that are affected by this Test. The DiagnosticService parent has a ServiceAffectsElement association to a Managed Element for this purpose. 
The &quot;Expensive&quot; qualifier can be applied to this class and its RunTest method. If so, the ResourcesUsed property describes the resources that are capitalized, based on a default setup for the test. Multiple resources can be specified since the property is an array.</VALUE></QUALIFIER><QUALIFIER NAME="ValueMap" TYPE="string"><VALUE.ARRAY><VALUE>2</VALUE><VALUE>3</VALUE><VALUE>4</VALUE><VALUE>5</VALUE><VALUE>6</VALUE><VALUE>7</VALUE><VALUE>8</VALUE><VALUE>9</VALUE><VALUE>10</VALUE><VALUE>11</VALUE><VALUE>12</VALUE><VALUE>13</VALUE><VALUE>14</VALUE><VALUE>15</VALUE><VALUE>16</VALUE><VALUE>17</VALUE><VALUE>18</VALUE><VALUE>19</VALUE><VALUE>20</VALUE><VALUE>21</VALUE><VALUE>22</VALUE><VALUE>23</VALUE><VALUE>24</VALUE><VALUE>25</VALUE><VALUE>26</VALUE><VALUE>27</VALUE><VALUE>28</VALUE></VALUE.ARRAY></QUALIFIER><QUALIFIER TRANSLATABLE="true" NAME="Values" TYPE="string"><VALUE.ARRAY><VALUE>CPU</VALUE><VALUE>Memory</VALUE><VALUE>Hard Disk</VALUE><VALUE>CDROM</VALUE><VALUE>Floppy</VALUE><VALUE>PCI Bus</VALUE><VALUE>USB Bus</VALUE><VALUE>1394 Bus</VALUE><VALUE>SCSI Bus</VALUE><VALUE>IDE Bus</VALUE><VALUE>Network</VALUE><VALUE>ISA Bus</VALUE><VALUE>EISA Bus</VALUE><VALUE>VESA Bus</VALUE><VALUE>PCMCIA Bus</VALUE><VALUE>CardBus</VALUE><VALUE>Access.bus</VALUE><VALUE>NuBus</VALUE><VALUE>AGP</VALUE><VALUE>VME Bus</VALUE><VALUE>Sbus IEEE 1396-1993</VALUE><VALUE>MCA Bus</VALUE><VALUE>GIO Bus</VALUE><VALUE>XIO Bus</VALUE><VALUE>HIO Bus</VALUE><VALUE>PMC Bus</VALUE><VALUE>SIO Bus</VALUE></VALUE.ARRAY></QUALIFIER></PROPERTY.ARRAY><PROPERTY.ARRAY CLASSORIGIN="CIM_DiagnosticTest" PROPAGATED="false" NAME="TestTypes" TYPE="uint16"><QUALIFIER TRANSLATABLE="true" NAME="Description" TYPE="string"><VALUE>The descriptions for each test type are below: 

* If &quot;Functional&quot; (value=2) is set, this tests one, more or all the functionality of the element. 

* If &quot;Stress&quot; (value=3) is set, this test is a stress test or exerciser for the element. 

* If &quot;Health Check&quot; (value=4) is set, this test validates the current health of the element. 

* If &quot;Access Test&quot; (value=5) is set, this test verifies the element is accessible to the system and user. This would include access through the OS as a user would access the element. 

* If &quot;Media Verify&quot; (value=6) is set, this test verifies the media for the element. This does not validate that specific data is correctly written on the media or even if data can be written to the media, but verifies that the media itself has no faults.</VALUE></QUALIFIER><QUALIFIER NAME="ValueMap" TYPE="string"><VALUE.ARRAY><VALUE>0</VALUE><VALUE>1</VALUE><VALUE>2</VALUE><VALUE>3</VALUE><VALUE>4</VALUE><VALUE>5</VALUE><VALUE>6</VALUE><VALUE>..</VALUE><VALUE>0x8000..</VALUE></VALUE.ARRAY></QUALIFIER><QUALIFIER TRANSLATABLE="true" NAME="Values" TYPE="string"><VALUE.ARRAY><VALUE>Unknown</VALUE><VALUE>Other</VALUE><VALUE>Functional</VALUE><VALUE>Stress</VALUE><VALUE>Health Check</VALUE><VALUE>Access Test</VALUE><VALUE>Media Verify</VALUE><VALUE>DMTF Reserved</VALUE><VALUE>Vendor Reserved</VALUE></VALUE.ARRAY></QUALIFIER><QUALIFIER OVERRIDABLE="false" NAME="ArrayType" TYPE="string"><VALUE>Indexed</VALUE></QUALIFIER><QUALIFIER NAME="ModelCorrespondence" TYPE="string"><VALUE.ARRAY><VALUE>CIM_DiagnosticTest.OtherTestTypesDescriptions</VALUE></VALUE.ARRAY></QUALIFIER></PROPERTY.ARRAY><PROPERTY.ARRAY CLASSORIGIN="CIM_DiagnosticTest" PROPAGATED="false" NAME="OtherTestTypesDescriptions" TYPE="string"><QUALIFIER TRANSLATABLE="true" NAME="Description" TYPE="string"><VALUE>OtherTestTypesDescriptions is an array that contains an element with additional information for each TestTypes element with a value of 1 (&quot;Other&quot;).</VALUE></QUALIFIER><QUALIFIER OVERRIDABLE="false" NAME="ArrayType" TYPE="string"><VALUE>Indexed</VALUE></QUALIFIER><QUALIFIER NAME="ModelCorrespondence" TYPE="string"><VALUE.ARRAY><VALUE>CIM_DiagnosticTest.TestTypes</VALUE></VALUE.ARRAY></QUALIFIER></PROPERTY.ARRAY><PROPERTY CLASSORIGIN="CIM_Service" PROPAGATED="true" NAME="SystemCreationClassName" TYPE="string"><QUALIFIER OVERRIDABLE="false" NAME="Key" TYPE="boolean"><VALUE>true</VALUE></QUALIFIER><QUALIFIER TRANSLATABLE="true" NAME="Description" TYPE="string"><VALUE>The CreationClassName of the scoping System.</VALUE></QUALIFIER><QUALIFIER NAME="MaxLen" TYPE="uint32"><VALUE>256</VALUE></QUALIFIER><QUALIFIER OVERRIDABLE="false" NAME="Propagated" TYPE="string"><VALUE>CIM_System.CreationClassName</VALUE></QUALIFIER></PROPERTY><PROPERTY CLASSORIGIN="CIM_Service" PROPAGATED="true" NAME="SystemName" TYPE="string"><QUALIFIER OVERRIDABLE="false" NAME="Key" TYPE="boolean"><VALUE>true</VALUE></QUALIFIER><QUALIFIER TRANSLATABLE="true" NAME="Description" TYPE="string"><VALUE>The Name of the scoping System.</VALUE></QUALIFIER><QUALIFIER NAME="MaxLen" TYPE="uint32"><VALUE>256</VALUE></QUALIFIER><QUALIFIER OVERRIDABLE="false" NAME="Propagated" TYPE="string"><VALUE>CIM_System.Name</VALUE></QUALIFIER></PROPERTY><PROPERTY CLASSORIGIN="CIM_Service" PROPAGATED="true" NAME="CreationClassName" TYPE="string"><QUALIFIER OVERRIDABLE="false" NAME="Key" TYPE="boolean"><VALUE>true</VALUE></QUALIFIER><QUALIFIER TRANSLATABLE="true" NAME="Description" TYPE="string"><VALUE>CreationClassName indicates the name of the class or the subclass that is used in the creation of an instance. When used with the other key properties of this class, this property allows all instances of this class and its subclasses to be uniquely identified.</VALUE></QUALIFIER><QUALIFIER NAME="MaxLen" TYPE="uint32"><VALUE>256</VALUE></QUALIFIER></PROPERTY><PROPERTY CLASSORIGIN="CIM_Service" PROPAGATED="true" NAME="Name" TYPE="string"><QUALIFIER OVERRIDABLE="false" NAME="Key" TYPE="boolean"><VALUE>true</VALUE></QUALIFIER><QUALIFIER TOSUBCLASS="false" NAME="Override" TYPE="string"><VALUE>Name</VALUE></QUALIFIER><QUALIFIER TRANSLATABLE="true" NAME="Description" TYPE="string"><VALUE>The Name property uniquely identifies the Service and provides an indication of the functionality that is managed. This functionality is described in more detail in the Description property of the object.</VALUE></QUALIFIER><QUALIFIER NAME="MaxLen" TYPE="uint32"><VALUE>256</VALUE></QUALIFIER></PROPERTY><PROPERTY CLASSORIGIN="CIM_Service" PROPAGATED="true" NAME="PrimaryOwnerName" TYPE="string"><QUALIFIER NAME="Write" TYPE="boolean"><VALUE>true</VALUE></QUALIFIER><QUALIFIER TRANSLATABLE="true" NAME="Description" TYPE="string"><VALUE>The name of the primary owner for the service, if one is defined. The primary owner is the initial support contact for the Service.</VALUE></QUALIFIER><QUALIFIER NAME="MaxLen" TYPE="uint32"><VALUE>64</VALUE></QUALIFIER><QUALIFIER NAME="MappingStrings" TYPE="string"><VALUE.ARRAY><VALUE>MIF.DMTF|General Information|001.3</VALUE></VALUE.ARRAY></QUALIFIER></PROPERTY><PROPERTY CLASSORIGIN="CIM_Service" PROPAGATED="true" NAME="PrimaryOwnerContact" TYPE="string"><QUALIFIER NAME="Write" TYPE="boolean"><VALUE>true</VALUE></QUALIFIER><QUALIFIER TRANSLATABLE="true" NAME="Description" TYPE="string"><VALUE>A string that provides information on how the primary owner of the Service can be reached (for example, phone number, e-mail address, and so on).</VALUE></QUALIFIER><QUALIFIER NAME="MaxLen" TYPE="uint32"><VALUE>256</VALUE></QUALIFIER><QUALIFIER NAME="MappingStrings" TYPE="string"><VALUE.ARRAY><VALUE>MIF.DMTF|General Information|001.4</VALUE></VALUE.ARRAY></QUALIFIER></PROPERTY><PROPERTY CLASSORIGIN="CIM_Service" PROPAGATED="true" NAME="StartMode" TYPE="string"><QUALIFIER TOSUBCLASS="false" NAME="Deprecated" TYPE="string"><VALUE.ARRAY><VALUE>CIM_Service.EnabledDefault</VALUE></VALUE.ARRAY></QUALIFIER><QUALIFIER TRANSLATABLE="true" NAME="Description" TYPE="string"><VALUE>Note: The use of this element is deprecated in lieu of the EnabledDefault property that is inherited from EnabledLogicalElement. The EnabledLogicalElement addresses the same semantics. The change to a uint16 data type was discussed when CIM V2.0 was defined. However, existing V1.0 implementations used the string property. To remain compatible with those implementations, StartMode was grandfathered into the schema. Use of the deprecated qualifier allows the maintenance of the existing property but also permits an improved, clarified definition using EnabledDefault. 
Deprecated description: StartMode is a string value that indicates whether the Service is automatically started by a System, an Operating System, and so on, or is started only upon request.</VALUE></QUALIFIER><QUALIFIER NAME="ValueMap" TYPE="string"><VALUE.ARRAY><VALUE>Automatic</VALUE><VALUE>Manual</VALUE></VALUE.ARRAY></QUALIFIER><QUALIFIER NAME="MaxLen" TYPE="uint32"><VALUE>10</VALUE></QUALIFIER></PROPERTY><PROPERTY CLASSORIGIN="CIM_Service" PROPAGATED="true" NAME="Started" TYPE="boolean"><QUALIFIER TRANSLATABLE="true" NAME="Description" TYPE="string"><VALUE>Started is a Boolean that indicates whether the Service has been started (TRUE), or stopped (FALSE).</VALUE></QUALIFIER></PROPERTY><PROPERTY CLASSORIGIN="CIM_EnabledLogicalElement" PROPAGATED="true" NAME="EnabledState" TYPE="uint16"><QUALIFIER TRANSLATABLE="true" NAME="Description" TYPE="string"><VALUE>EnabledState is an integer enumeration that indicates the enabled and disabled states of an element. It can also indicate the transitions between these requested states. For example, shutting down (value=4) and starting (value=10) are transient states between enabled and disabled. The following text briefly summarizes the various enabled and disabled states: 
Enabled (2) indicates that the element is or could be executing commands, will process any queued commands, and queues new requests. 
Disabled (3) indicates that the element will not execute commands and will drop any new requests. 
Shutting Down (4) indicates that the element is in the process of going to a Disabled state. 
Not Applicable (5) indicates the element does not support being enabled or disabled. 
Enabled but Offline (6) indicates that the element might be completing commands, and will drop any new requests. 
Test (7) indicates that the element is in a test state. 
Deferred (8) indicates that the element might be completing commands, but will queue any new requests. 
Quiesce (9) indicates that the element is enabled but in a restricted mode.
Starting (10) indicates that the element is in the process of going to an Enabled state. New requests are queued.</VALUE></QUALIFIER><QUALIFIER NAME="ValueMap" TYPE="string"><VALUE.ARRAY><VALUE>0</VALUE><VALUE>1</VALUE><VALUE>2</VALUE><VALUE>3</VALUE><VALUE>4</VALUE><VALUE>5</VALUE><VALUE>6</VALUE><VALUE>7</VALUE><VALUE>8</VALUE><VALUE>9</VALUE><VALUE>10</VALUE><VALUE>11..32767</VALUE><VALUE>32768..65535</VALUE></VALUE.ARRAY></QUALIFIER><QUALIFIER TRANSLATABLE="true" NAME="Values" TYPE="string"><VALUE.ARRAY><VALUE>Unknown</VALUE><VALUE>Other</VALUE><VALUE>Enabled</VALUE><VALUE>Disabled</VALUE><VALUE>Shutting Down</VALUE><VALUE>Not Applicable</VALUE><VALUE>Enabled but Offline</VALUE><VALUE>In Test</VALUE><VALUE>Deferred</VALUE><VALUE>Quiesce</VALUE><VALUE>Starting</VALUE><VALUE>DMTF Reserved</VALUE><VALUE>Vendor Reserved</VALUE></VALUE.ARRAY></QUALIFIER><QUALIFIER NAME="ModelCorrespondence" TYPE="string"><VALUE.ARRAY><VALUE>CIM_EnabledLogicalElement.OtherEnabledState</VALUE></VALUE.ARRAY></QUALIFIER><VALUE>5</VALUE></PROPERTY><PROPERTY CLASSORIGIN="CIM_EnabledLogicalElement" PROPAGATED="true" NAME="OtherEnabledState" TYPE="string"><QUALIFIER TRANSLATABLE="true" NAME="Description" TYPE="string"><VALUE>A string that describes the enabled or disabled state of the element when the EnabledState property is set to 1 (&quot;Other&quot;). This property must be set to null when EnabledState is any value other than 1.</VALUE></QUALIFIER><QUALIFIER NAME="ModelCorrespondence" TYPE="string"><VALUE.ARRAY><VALUE>CIM_EnabledLogicalElement.EnabledState</VALUE></VALUE.ARRAY></QUALIFIER></PROPERTY><PROPERTY CLASSORIGIN="CIM_EnabledLogicalElement" PROPAGATED="true" NAME="RequestedState" TYPE="uint16"><QUALIFIER TRANSLATABLE="true" NAME="Description" TYPE="string"><VALUE>RequestedState is an integer enumeration that indicates the last requested or desired state for the element, irrespective of the mechanism through which it was requested. The actual state of the element is represented by EnabledState. This property is provided to compare the last requested and current enabled or disabled states. Note that when EnabledState is set to 5 (&quot;Not Applicable&quot;), then this property has no meaning. Refer to the EnabledState property description for explanations of the values in the RequestedState enumeration. 
&quot;Unknown&quot; (0) indicates the last requested state for the element is unknown.
Note that the value &quot;No Change&quot; (5) has been deprecated in lieu of indicating the last requested state is &quot;Unknown&quot; (0). If the last requested or desired state is unknown, RequestedState should have the value &quot;Unknown&quot; (0), but may have the value &quot;No Change&quot; (5).Offline (6) indicates that the element has been requested to transition to the Enabled but Offline EnabledState. 
It should be noted that there are two new values in RequestedState that build on the statuses of EnabledState. These are &quot;Reboot&quot; (10) and &quot;Reset&quot; (11). Reboot refers to doing a &quot;Shut Down&quot; and then moving to an &quot;Enabled&quot; state. Reset indicates that the element is first &quot;Disabled&quot; and then &quot;Enabled&quot;. The distinction between requesting &quot;Shut Down&quot; and &quot;Disabled&quot; should also be noted. Shut Down requests an orderly transition to the Disabled state, and might involve removing power, to completely erase any existing state. The Disabled state requests an immediate disabling of the element, such that it will not execute or accept any commands or processing requests. 

This property is set as the result of a method invocation (such as Start or StopService on CIM_Service), or can be overridden and defined as WRITEable in a subclass. The method approach is considered superior to a WRITEable property, because it allows an explicit invocation of the operation and the return of a result code. 

If knowledge of the last RequestedState is not supported for the EnabledLogicalElement, the property shall be NULL or have the value 12 &quot;Not Applicable&quot;.</VALUE></QUALIFIER><QUALIFIER NAME="ValueMap" TYPE="string"><VALUE.ARRAY><VALUE>0</VALUE><VALUE>2</VALUE><VALUE>3</VALUE><VALUE>4</VALUE><VALUE>5</VALUE><VALUE>6</VALUE><VALUE>7</VALUE><VALUE>8</VALUE><VALUE>9</VALUE><VALUE>10</VALUE><VALUE>11</VALUE><VALUE>12</VALUE><VALUE>..</VALUE><VALUE>32768..65535</VALUE></VALUE.ARRAY></QUALIFIER><QUALIFIER TRANSLATABLE="true" NAME="Values" TYPE="string"><VALUE.ARRAY><VALUE>Unknown</VALUE><VALUE>Enabled</VALUE><VALUE>Disabled</VALUE><VALUE>Shut Down</VALUE><VALUE>No Change</VALUE><VALUE>Offline</VALUE><VALUE>Test</VALUE><VALUE>Deferred</VALUE><VALUE>Quiesce</VALUE><VALUE>Reboot</VALUE><VALUE>Reset</VALUE><VALUE>Not Applicable</VALUE><VALUE>DMTF Reserved</VALUE><VALUE>Vendor Reserved</VALUE></VALUE.ARRAY></QUALIFIER><QUALIFIER NAME="ModelCorrespondence" TYPE="string"><VALUE.ARRAY><VALUE>CIM_EnabledLogicalElement.EnabledState</VALUE></VALUE.ARRAY></QUALIFIER><VALUE>12</VALUE></PROPERTY><PROPERTY CLASSORIGIN="CIM_EnabledLogicalElement" PROPAGATED="true" NAME="EnabledDefault" TYPE="uint16"><QUALIFIER NAME="Write" TYPE="boolean"><VALUE>true</VALUE></QUALIFIER><QUALIFIER TRANSLATABLE="true" NAME="Description" TYPE="string"><VALUE>An enumerated value indicating an administrator&apos;s default or startup configuration for the Enabled State of an element. By default, the element is &quot;Enabled&quot; (value=2).</VALUE></QUALIFIER><QUALIFIER NAME="ValueMap" TYPE="string"><VALUE.ARRAY><VALUE>2</VALUE><VALUE>3</VALUE><VALUE>5</VALUE><VALUE>6</VALUE><VALUE>7</VALUE><VALUE>9</VALUE><VALUE>..</VALUE><VALUE>32768..65535</VALUE></VALUE.ARRAY></QUALIFIER><QUALIFIER TRANSLATABLE="true" NAME="Values" TYPE="string"><VALUE.ARRAY><VALUE>Enabled</VALUE><VALUE>Disabled</VALUE><VALUE>Not Applicable</VALUE><VALUE>Enabled but Offline</VALUE><VALUE>No Default</VALUE><VALUE>Quiesce</VALUE><VALUE>DMTF Reserved</VALUE><VALUE>Vendor Reserved</VALUE></VALUE.ARRAY></QUALIFIER><VALUE>2</VALUE></PROPERTY><PROPERTY CLASSORIGIN="CIM_EnabledLogicalElement" PROPAGATED="true" NAME="TimeOfLastStateChange" TYPE="datetime"><QUALIFIER TRANSLATABLE="true" NAME="Description" TYPE="string"><VALUE>The date or time when the EnabledState of the element last changed. If the state of the element has not changed and this property is populated, then it must be set to a 0 interval value. If a state change was requested, but rejected or not yet processed, the property must not be updated.</VALUE></QUALIFIER></PROPERTY><PROPERTY.ARRAY CLASSORIGIN="CIM_EnabledLogicalElement" PROPAGATED="true" NAME="AvailableRequestedStates" TYPE="uint16"><QUALIFIER TRANSLATABLE="true" NAME="Description" TYPE="string"><VALUE>AvailableRequestedStates indicates the possible values for the RequestedState parameter of the method RequestStateChange, used to initiate a state change. The values listed shall be a subset of the values contained in the RequestedStatesSupported property of the associated instance of CIM_EnabledLogicalElementCapabilities where the values selected are a function of the current state of the CIM_EnabledLogicalElement. This property may be non-null if an implementation is able to advertise the set of possible values as a function of the current state. This property shall be null if an implementation is unable to determine the set of possible values as a function of the current state.</VALUE></QUALIFIER><QUALIFIER NAME="ValueMap" TYPE="string"><VALUE.ARRAY><VALUE>2</VALUE><VALUE>3</VALUE><VALUE>4</VALUE><VALUE>6</VALUE><VALUE>7</VALUE><VALUE>8</VALUE><VALUE>9</VALUE><VALUE>10</VALUE><VALUE>11</VALUE><VALUE>..</VALUE></VALUE.ARRAY></QUALIFIER><QUALIFIER TRANSLATABLE="true" NAME="Values" TYPE="string"><VALUE.ARRAY><VALUE>Enabled</VALUE><VALUE>Disabled</VALUE><VALUE>Shut Down</VALUE><VALUE>Offline</VALUE><VALUE>Test</VALUE><VALUE>Defer</VALUE><VALUE>Quiesce</VALUE><VALUE>Reboot</VALUE><VALUE>Reset</VALUE><VALUE>DMTF Reserved</VALUE></VALUE.ARRAY></QUALIFIER><QUALIFIER NAME="ModelCorrespondence" TYPE="string"><VALUE.ARRAY><VALUE>CIM_EnabledLogicalElement.RequestStateChange</VALUE><VALUE>CIM_EnabledLogicalElementCapabilities.RequestedStatesSupported</VALUE></VALUE.ARRAY></QUALIFIER></PROPERTY.ARRAY><PROPERTY CLASSORIGIN="CIM_EnabledLogicalElement" PROPAGATED="true" NAME="TransitioningToState" TYPE="uint16"><QUALIFIER TRANSLATABLE="true" NAME="Description" TYPE="string"><VALUE>TransitioningToState indicates the target state to which the instance is transitioning. 
A value of 5 &quot;No Change&quot; shall indicate that no transition is in progress.A value of 12 &quot;Not Applicable&quot; shall indicate the implementation does not support representing ongoing transitions. 
A value other than 5 or 12 shall identify the state to which the element is in the process of transitioning.</VALUE></QUALIFIER><QUALIFIER NAME="ValueMap" TYPE="string"><VALUE.ARRAY><VALUE>0</VALUE><VALUE>2</VALUE><VALUE>3</VALUE><VALUE>4</VALUE><VALUE>5</VALUE><VALUE>6</VALUE><VALUE>7</VALUE><VALUE>8</VALUE><VALUE>9</VALUE><VALUE>10</VALUE><VALUE>11</VALUE><VALUE>12</VALUE><VALUE>..</VALUE></VALUE.ARRAY></QUALIFIER><QUALIFIER TRANSLATABLE="true" NAME="Values" TYPE="string"><VALUE.ARRAY><VALUE>Unknown</VALUE><VALUE>Enabled</VALUE><VALUE>Disabled</VALUE><VALUE>Shut Down</VALUE><VALUE>No Change</VALUE><VALUE>Offline</VALUE><VALUE>Test</VALUE><VALUE>Defer</VALUE><VALUE>Quiesce</VALUE><VALUE>Reboot</VALUE><VALUE>Reset</VALUE><VALUE>Not Applicable</VALUE><VALUE>DMTF Reserved</VALUE></VALUE.ARRAY></QUALIFIER><QUALIFIER NAME="ModelCorrespondence" TYPE="string"><VALUE.ARRAY><VALUE>CIM_EnabledLogicalElement.RequestStateChange</VALUE><VALUE>CIM_EnabledLogicalElement.RequestedState</VALUE><VALUE>CIM_EnabledLogicalElement.EnabledState</VALUE></VALUE.ARRAY></QUALIFIER><VALUE>12</VALUE></PROPERTY><PROPERTY CLASSORIGIN="CIM_ManagedSystemElement" PROPAGATED="true" NAME="InstallDate" TYPE="datetime"><QUALIFIER TRANSLATABLE="true" NAME="Description" TYPE="string"><VALUE>A datetime value that indicates when the object was installed. Lack of a value does not indicate that the object is not installed.</VALUE></QUALIFIER><QUALIFIER NAME="MappingStrings" TYPE="string"><VALUE.ARRAY><VALUE>MIF.DMTF|ComponentID|001.5</VALUE></VALUE.ARRAY></QUALIFIER></PROPERTY><PROPERTY.ARRAY CLASSORIGIN="CIM_ManagedSystemElement" PROPAGATED="true" NAME="OperationalStatus" TYPE="uint16"><QUALIFIER TRANSLATABLE="true" NAME="Description" TYPE="string"><VALUE>Indicates the current statuses of the element. Various operational statuses are defined. Many of the enumeration&apos;s values are self-explanatory. However, a few are not and are described here in more detail. 
&quot;Stressed&quot; indicates that the element is functioning, but needs attention. Examples of &quot;Stressed&quot; states are overload, overheated, and so on. 
&quot;Predictive Failure&quot; indicates that an element is functioning nominally but predicting a failure in the near future. 
&quot;In Service&quot; describes an element being configured, maintained, cleaned, or otherwise administered. 
&quot;No Contact&quot; indicates that the monitoring system has knowledge of this element, but has never been able to establish communications with it. 
&quot;Lost Communication&quot; indicates that the ManagedSystem Element is known to exist and has been contacted successfully in the past, but is currently unreachable. 
&quot;Stopped&quot; and &quot;Aborted&quot; are similar, although the former implies a clean and orderly stop, while the latter implies an abrupt stop where the state and configuration of the element might need to be updated. 
&quot;Dormant&quot; indicates that the element is inactive or quiesced. 
&quot;Supporting Entity in Error&quot; indicates that this element might be &quot;OK&quot; but that another element, on which it is dependent, is in error. An example is a network service or endpoint that cannot function due to lower-layer networking problems. 
&quot;Completed&quot; indicates that the element has completed its operation. This value should be combined with either OK, Error, or Degraded so that a client can tell if the complete operation Completed with OK (passed), Completed with Error (failed), or Completed with Degraded (the operation finished, but it did not complete OK or did not report an error). 
&quot;Power Mode&quot; indicates that the element has additional power model information contained in the Associated PowerManagementService association. 
&quot;Relocating&quot; indicates the element is being relocated.
OperationalStatus replaces the Status property on ManagedSystemElement to provide a consistent approach to enumerations, to address implementation needs for an array property, and to provide a migration path from today&apos;s environment to the future. This change was not made earlier because it required the deprecated qualifier. Due to the widespread use of the existing Status property in management applications, it is strongly recommended that providers or instrumentation provide both the Status and OperationalStatus properties. Further, the first value of OperationalStatus should contain the primary status for the element. When instrumented, Status (because it is single-valued) should also provide the primary status of the element.</VALUE></QUALIFIER><QUALIFIER NAME="ValueMap" TYPE="string"><VALUE.ARRAY><VALUE>0</VALUE><VALUE>1</VALUE><VALUE>2</VALUE><VALUE>3</VALUE><VALUE>4</VALUE><VALUE>5</VALUE><VALUE>6</VALUE><VALUE>7</VALUE><VALUE>8</VALUE><VALUE>9</VALUE><VALUE>10</VALUE><VALUE>11</VALUE><VALUE>12</VALUE><VALUE>13</VALUE><VALUE>14</VALUE><VALUE>15</VALUE><VALUE>16</VALUE><VALUE>17</VALUE><VALUE>18</VALUE><VALUE>19</VALUE><VALUE>..</VALUE><VALUE>0x8000..</VALUE></VALUE.ARRAY></QUALIFIER><QUALIFIER TRANSLATABLE="true" NAME="Values" TYPE="string"><VALUE.ARRAY><VALUE>Unknown</VALUE><VALUE>Other</VALUE><VALUE>OK</VALUE><VALUE>Degraded</VALUE><VALUE>Stressed</VALUE><VALUE>Predictive Failure</VALUE><VALUE>Error</VALUE><VALUE>Non-Recoverable Error</VALUE><VALUE>Starting</VALUE><VALUE>Stopping</VALUE><VALUE>Stopped</VALUE><VALUE>In Service</VALUE><VALUE>No Contact</VALUE><VALUE>Lost Communication</VALUE><VALUE>Aborted</VALUE><VALUE>Dormant</VALUE><VALUE>Supporting Entity in Error</VALUE><VALUE>Completed</VALUE><VALUE>Power Mode</VALUE><VALUE>Relocating</VALUE><VALUE>DMTF Reserved</VALUE><VALUE>Vendor Reserved</VALUE></VALUE.ARRAY></QUALIFIER><QUALIFIER OVERRIDABLE="false" NAME="ArrayType" TYPE="string"><VALUE>Indexed</VALUE></QUALIFIER><QUALIFIER NAME="ModelCorrespondence" TYPE="string"><VALUE.ARRAY><VALUE>CIM_ManagedSystemElement.StatusDescriptions</VALUE></VALUE.ARRAY></QUALIFIER></PROPERTY.ARRAY><PROPERTY.ARRAY CLASSORIGIN="CIM_ManagedSystemElement" PROPAGATED="true" NAME="StatusDescriptions" TYPE="string"><QUALIFIER TRANSLATABLE="true" NAME="Description" TYPE="string"><VALUE>Strings describing the various OperationalStatus array values. For example, if &quot;Stopping&quot; is the value assigned to OperationalStatus, then this property may contain an explanation as to why an object is being stopped. Note that entries in this array are correlated with those at the same array index in OperationalStatus.</VALUE></QUALIFIER><QUALIFIER OVERRIDABLE="false" NAME="ArrayType" TYPE="string"><VALUE>Indexed</VALUE></QUALIFIER><QUALIFIER NAME="ModelCorrespondence" TYPE="string"><VALUE.ARRAY><VALUE>CIM_ManagedSystemElement.OperationalStatus</VALUE></VALUE.ARRAY></QUALIFIER></PROPERTY.ARRAY><PROPERTY CLASSORIGIN="CIM_ManagedSystemElement" PROPAGATED="true" NAME="Status" TYPE="string"><QUALIFIER TOSUBCLASS="false" NAME="Deprecated" TYPE="string"><VALUE.ARRAY><VALUE>CIM_ManagedSystemElement.OperationalStatus</VALUE></VALUE.ARRAY></QUALIFIER><QUALIFIER TRANSLATABLE="true" NAME="Description" TYPE="string"><VALUE>A string indicating the current status of the object. Various operational and non-operational statuses are defined. This property is deprecated in lieu of OperationalStatus, which includes the same semantics in its enumeration. This change is made for 3 reasons: 
1) Status is more correctly defined as an array. This definition overcomes the limitation of describing status using a single value, when it is really a multi-valued property (for example, an element might be OK AND Stopped. 
2) A MaxLen of 10 is too restrictive and leads to unclear enumerated values. 
3) The change to a uint16 data type was discussed when CIM V2.0 was defined. However, existing V1.0 implementations used the string property and did not want to modify their code. Therefore, Status was grandfathered into the Schema. Use of the deprecated qualifier allows the maintenance of the existing property, but also permits an improved definition using OperationalStatus.</VALUE></QUALIFIER><QUALIFIER NAME="ValueMap" TYPE="string"><VALUE.ARRAY><VALUE>OK</VALUE><VALUE>Error</VALUE><VALUE>Degraded</VALUE><VALUE>Unknown</VALUE><VALUE>Pred Fail</VALUE><VALUE>Starting</VALUE><VALUE>Stopping</VALUE><VALUE>Service</VALUE><VALUE>Stressed</VALUE><VALUE>NonRecover</VALUE><VALUE>No Contact</VALUE><VALUE>Lost Comm</VALUE><VALUE>Stopped</VALUE></VALUE.ARRAY></QUALIFIER><QUALIFIER NAME="MaxLen" TYPE="uint32"><VALUE>10</VALUE></QUALIFIER></PROPERTY><PROPERTY CLASSORIGIN="CIM_ManagedSystemElement" PROPAGATED="true" NAME="HealthState" TYPE="uint16"><QUALIFIER TRANSLATABLE="true" NAME="Description" TYPE="string"><VALUE>Indicates the current health of the element. This attribute expresses the health of this element but not necessarily that of its subcomponents. The possible values are 0 to 30, where 5 means the element is entirely healthy and 30 means the element is completely non-functional. The following continuum is defined: 
&quot;Non-recoverable Error&quot; (30) - The element has completely failed, and recovery is not possible. All functionality provided by this element has been lost. 
&quot;Critical Failure&quot; (25) - The element is non-functional and recovery might not be possible. 
&quot;Major Failure&quot; (20) - The element is failing. It is possible that some or all of the functionality of this component is degraded or not working. 
&quot;Minor Failure&quot; (15) - All functionality is available but some might be degraded. 
&quot;Degraded/Warning&quot; (10) - The element is in working order and all functionality is provided. However, the element is not working to the best of its abilities. For example, the element might not be operating at optimal performance or it might be reporting recoverable errors. 
&quot;OK&quot; (5) - The element is fully functional and is operating within normal operational parameters and without error. 
&quot;Unknown&quot; (0) - The implementation cannot report on HealthState at this time. 
DMTF has reserved the unused portion of the continuum for additional HealthStates in the future.</VALUE></QUALIFIER><QUALIFIER NAME="ValueMap" TYPE="string"><VALUE.ARRAY><VALUE>0</VALUE><VALUE>5</VALUE><VALUE>10</VALUE><VALUE>15</VALUE><VALUE>20</VALUE><VALUE>25</VALUE><VALUE>30</VALUE><VALUE>..</VALUE><VALUE>32768..65535</VALUE></VALUE.ARRAY></QUALIFIER><QUALIFIER TRANSLATABLE="true" NAME="Values" TYPE="string"><VALUE.ARRAY><VALUE>Unknown</VALUE><VALUE>OK</VALUE><VALUE>Degraded/Warning</VALUE><VALUE>Minor failure</VALUE><VALUE>Major failure</VALUE><VALUE>Critical failure</VALUE><VALUE>Non-recoverable error</VALUE><VALUE>DMTF Reserved</VALUE><VALUE>Vendor Specific</VALUE></VALUE.ARRAY></QUALIFIER></PROPERTY><PROPERTY CLASSORIGIN="CIM_ManagedSystemElement" PROPAGATED="true" NAME="CommunicationStatus" TYPE="uint16"><QUALIFIER TRANSLATABLE="true" NAME="Description" TYPE="string"><VALUE>CommunicationStatus indicates the ability of the instrumentation to communicate with the underlying ManagedElement. CommunicationStatus consists of one of the following values: Unknown, None, Communication OK, Lost Communication, or No Contact. 
A Null return indicates the implementation (provider) does not implement this property. 
&quot;Unknown&quot; indicates the implementation is in general capable of returning this property, but is unable to do so at this time. 
&quot;Not Available&quot; indicates that the implementation (provider) is capable of returning a value for this property, but not ever for this particular piece of hardware/software or the property is intentionally not used because it adds no meaningful information (as in the case of a property that is intended to add additional info to another property). 
&quot;Communication OK &quot; indicates communication is established with the element, but does not convey any quality of service. 
&quot;No Contact&quot; indicates that the monitoring system has knowledge of this element, but has never been able to establish communications with it. 
&quot;Lost Communication&quot; indicates that the Managed Element is known to exist and has been contacted successfully in the past, but is currently unreachable.</VALUE></QUALIFIER><QUALIFIER NAME="ValueMap" TYPE="string"><VALUE.ARRAY><VALUE>0</VALUE><VALUE>1</VALUE><VALUE>2</VALUE><VALUE>3</VALUE><VALUE>4</VALUE><VALUE>..</VALUE><VALUE>0x8000..</VALUE></VALUE.ARRAY></QUALIFIER><QUALIFIER TRANSLATABLE="true" NAME="Values" TYPE="string"><VALUE.ARRAY><VALUE>Unknown</VALUE><VALUE>Not Available</VALUE><VALUE>Communication OK</VALUE><VALUE>Lost Communication</VALUE><VALUE>No Contact</VALUE><VALUE>DMTF Reserved</VALUE><VALUE>Vendor Reserved</VALUE></VALUE.ARRAY></QUALIFIER></PROPERTY><PROPERTY CLASSORIGIN="CIM_ManagedSystemElement" PROPAGATED="true" NAME="DetailedStatus" TYPE="uint16"><QUALIFIER TRANSLATABLE="true" NAME="Description" TYPE="string"><VALUE>DetailedStatus compliments PrimaryStatus with additional status detail. It consists of one of the following values: Not Available, No Additional Information, Stressed, Predictive Failure, Error, Non-Recoverable Error, SupportingEntityInError. Detailed status is used to expand upon the PrimaryStatus of the element. 
A Null return indicates the implementation (provider) does not implement this property. 
&quot;Not Available&quot; indicates that the implementation (provider) is capable of returning a value for this property, but not ever for this particular piece of hardware/software or the property is intentionally not used because it adds no meaningful information (as in the case of a property that is intended to add additional info to another property). 
&quot;No Additional Information&quot; indicates that the element is functioning normally as indicated by PrimaryStatus = &quot;OK&quot;. 
&quot;Stressed&quot; indicates that the element is functioning, but needs attention. Examples of &quot;Stressed&quot; states are overload, overheated, and so on. 
&quot;Predictive Failure&quot; indicates that an element is functioning normally but a failure is predicted in the near future. 
&quot;Non-Recoverable Error &quot; indicates that this element is in an error condition that requires human intervention. 
&quot;Supporting Entity in Error&quot; indicates that this element might be &quot;OK&quot; but that another element, on which it is dependent, is in error. An example is a network service or endpoint that cannot function due to lower-layer networking problems.</VALUE></QUALIFIER><QUALIFIER NAME="ValueMap" TYPE="string"><VALUE.ARRAY><VALUE>0</VALUE><VALUE>1</VALUE><VALUE>2</VALUE><VALUE>3</VALUE><VALUE>4</VALUE><VALUE>5</VALUE><VALUE>..</VALUE><VALUE>0x8000..</VALUE></VALUE.ARRAY></QUALIFIER><QUALIFIER TRANSLATABLE="true" NAME="Values" TYPE="string"><VALUE.ARRAY><VALUE>Not Available</VALUE><VALUE>No Additional Information</VALUE><VALUE>Stressed</VALUE><VALUE>Predictive Failure</VALUE><VALUE>Non-Recoverable Error</VALUE><VALUE>Supporting Entity in Error</VALUE><VALUE>DMTF Reserved</VALUE><VALUE>Vendor Reserved</VALUE></VALUE.ARRAY></QUALIFIER><QUALIFIER NAME="ModelCorrespondence" TYPE="string"><VALUE.ARRAY><VALUE>CIM_EnabledLogicalElement.PrimaryStatus</VALUE><VALUE>CIM_ManagedSystemElement.HealthState</VALUE></VALUE.ARRAY></QUALIFIER></PROPERTY><PROPERTY CLASSORIGIN="CIM_ManagedSystemElement" PROPAGATED="true" NAME="OperatingStatus" TYPE="uint16"><QUALIFIER TRANSLATABLE="true" NAME="Description" TYPE="string"><VALUE>OperatingStatus provides a current status value for the operational condition of the element and can be used for providing more detail with respect to the value of EnabledState. It can also provide the transitional states when an element is transitioning from one state to another, such as when an element is transitioning between EnabledState and RequestedState, as well as other transitional conditions.
OperatingStatus consists of one of the following values: Unknown, Not Available, In Service, Starting, Stopping, Stopped, Aborted, Dormant, Completed, Migrating, Emmigrating, Immigrating, Snapshotting. Shutting Down, In Test 
A Null return indicates the implementation (provider) does not implement this property. 
&quot;Unknown&quot; indicates the implementation is in general capable of returning this property, but is unable to do so at this time. 
&quot;None&quot; indicates that the implementation (provider) is capable of returning a value for this property, but not ever for this particular piece of hardware/software or the property is intentionally not used because it adds no meaningful information (as in the case of a property that is intended to add additional info to another property). 
&quot;Servicing&quot; describes an element being configured, maintained, cleaned, or otherwise administered. 
&quot;Starting&quot; describes an element being initialized. 
&quot;Stopping&quot; describes an element being brought to an orderly stop. 
&quot;Stopped&quot; and &quot;Aborted&quot; are similar, although the former implies a clean and orderly stop, while the latter implies an abrupt stop where the state and configuration of the element might need to be updated. 
&quot;Dormant&quot; indicates that the element is inactive or quiesced. 
&quot;Completed&quot; indicates that the element has completed its operation. This value should be combined with either OK, Error, or Degraded in the PrimaryStatus so that a client can tell if the complete operation Completed with OK (passed), Completed with Error (failed), or Completed with Degraded (the operation finished, but it did not complete OK or did not report an error). 
&quot;Migrating&quot; element is being moved between host elements. 
&quot;Immigrating&quot; element is being moved to new host element. 
&quot;Emigrating&quot; element is being moved away from host element. 
&quot;Shutting Down&quot; describes an element being brought to an abrupt stop. 
&quot;In Test&quot; element is performing test functions. 
&quot;Transitioning&quot; describes an element that is between states, that is, it is not fully available in either its previous state or its next state. This value should be used if other values indicating a transition to a specific state are not applicable.
&quot;In Service&quot; describes an element that is in service and operational.</VALUE></QUALIFIER><QUALIFIER NAME="ValueMap" TYPE="string"><VALUE.ARRAY><VALUE>0</VALUE><VALUE>1</VALUE><VALUE>2</VALUE><VALUE>3</VALUE><VALUE>4</VALUE><VALUE>5</VALUE><VALUE>6</VALUE><VALUE>7</VALUE><VALUE>8</VALUE><VALUE>9</VALUE><VALUE>10</VALUE><VALUE>11</VALUE><VALUE>12</VALUE><VALUE>13</VALUE><VALUE>14</VALUE><VALUE>15</VALUE><VALUE>16</VALUE><VALUE>..</VALUE><VALUE>0x8000..</VALUE></VALUE.ARRAY></QUALIFIER><QUALIFIER TRANSLATABLE="true" NAME="Values" TYPE="string"><VALUE.ARRAY><VALUE>Unknown</VALUE><VALUE>Not Available</VALUE><VALUE>Servicing</VALUE><VALUE>Starting</VALUE><VALUE>Stopping</VALUE><VALUE>Stopped</VALUE><VALUE>Aborted</VALUE><VALUE>Dormant</VALUE><VALUE>Completed</VALUE><VALUE>Migrating</VALUE><VALUE>Emigrating</VALUE><VALUE>Immigrating</VALUE><VALUE>Snapshotting</VALUE><VALUE>Shutting Down</VALUE><VALUE>In Test</VALUE><VALUE>Transitioning</VALUE><VALUE>In Service</VALUE><VALUE>DMTF Reserved</VALUE><VALUE>Vendor Reserved</VALUE></VALUE.ARRAY></QUALIFIER><QUALIFIER NAME="ModelCorrespondence" TYPE="string"><VALUE.ARRAY><VALUE>CIM_EnabledLogicalElement.EnabledState</VALUE></VALUE.ARRAY></QUALIFIER></PROPERTY><PROPERTY CLASSORIGIN="CIM_ManagedSystemElement" PROPAGATED="true" NAME="PrimaryStatus" TYPE="uint16"><QUALIFIER TRANSLATABLE="true" NAME="Description" TYPE="string"><VALUE>PrimaryStatus provides a high level status value, intended to align with Red-Yellow-Green type representation of status. It should be used in conjunction with DetailedStatus to provide high level and detailed health status of the ManagedElement and its subcomponents. 
PrimaryStatus consists of one of the following values: Unknown, OK, Degraded or Error. &quot;Unknown&quot; indicates the implementation is in general capable of returning this property, but is unable to do so at this time. 
&quot;OK&quot; indicates the ManagedElement is functioning normally. 
&quot;Degraded&quot; indicates the ManagedElement is functioning below normal. 
&quot;Error&quot; indicates the ManagedElement is in an Error condition.</VALUE></QUALIFIER><QUALIFIER NAME="ValueMap" TYPE="string"><VALUE.ARRAY><VALUE>0</VALUE><VALUE>1</VALUE><VALUE>2</VALUE><VALUE>3</VALUE><VALUE>..</VALUE><VALUE>0x8000..</VALUE></VALUE.ARRAY></QUALIFIER><QUALIFIER TRANSLATABLE="true" NAME="Values" TYPE="string"><VALUE.ARRAY><VALUE>Unknown</VALUE><VALUE>OK</VALUE><VALUE>Degraded</VALUE><VALUE>Error</VALUE><VALUE>DMTF Reserved</VALUE><VALUE>Vendor Reserved</VALUE></VALUE.ARRAY></QUALIFIER><QUALIFIER NAME="ModelCorrespondence" TYPE="string"><VALUE.ARRAY><VALUE>CIM_ManagedSystemElement.DetailedStatus</VALUE><VALUE>CIM_ManagedSystemElement.HealthState</VALUE></VALUE.ARRAY></QUALIFIER></PROPERTY><PROPERTY CLASSORIGIN="CIM_ManagedElement" PROPAGATED="true" NAME="InstanceID" TYPE="string"><QUALIFIER TRANSLATABLE="true" NAME="Description" TYPE="string"><VALUE>InstanceID is an optional property that may be used to opaquely and uniquely identify an instance of this class within the scope of the instantiating Namespace. Various subclasses of this class may override this property to make it required, or a key. Such subclasses may also modify the preferred algorithms for ensuring uniqueness that are defined below.
To ensure uniqueness within the NameSpace, the value of InstanceID should be constructed using the following &quot;preferred&quot; algorithm: 
&lt;OrgID&gt;:&lt;LocalID&gt; 
Where &lt;OrgID&gt; and &lt;LocalID&gt; are separated by a colon (:), and where &lt;OrgID&gt; must include a copyrighted, trademarked, or otherwise unique name that is owned by the business entity that is creating or defining the InstanceID or that is a registered ID assigned to the business entity by a recognized global authority. (This requirement is similar to the &lt;Schema Name&gt;_&lt;Class Name&gt; structure of Schema class names.) In addition, to ensure uniqueness, &lt;OrgID&gt; must not contain a colon (:). When using this algorithm, the first colon to appear in InstanceID must appear between &lt;OrgID&gt; and &lt;LocalID&gt;. 
&lt;LocalID&gt; is chosen by the business entity and should not be reused to identify different underlying (real-world) elements. If not null and the above &quot;preferred&quot; algorithm is not used, the defining entity must assure that the resulting InstanceID is not reused across any InstanceIDs produced by this or other providers for the NameSpace of this instance. 
If not set to null for DMTF-defined instances, the &quot;preferred&quot; algorithm must be used with the &lt;OrgID&gt; set to CIM.</VALUE></QUALIFIER></PROPERTY><PROPERTY CLASSORIGIN="CIM_ManagedElement" PROPAGATED="true" NAME="Caption" TYPE="string"><QUALIFIER TRANSLATABLE="true" NAME="Description" TYPE="string"><VALUE>The Caption property is a short textual description (one- line string) of the object.</VALUE></QUALIFIER><QUALIFIER NAME="MaxLen" TYPE="uint32"><VALUE>64</VALUE></QUALIFIER></PROPERTY><PROPERTY CLASSORIGIN="CIM_ManagedElement" PROPAGATED="true" NAME="Description" TYPE="string"><QUALIFIER TRANSLATABLE="true" NAME="Description" TYPE="string"><VALUE>The Description property provides a textual description of the object.</VALUE></QUALIFIER></PROPERTY><PROPERTY CLASSORIGIN="CIM_ManagedElement" PROPAGATED="true" NAME="ElementName" TYPE="string"><QUALIFIER TRANSLATABLE="true" NAME="Description" TYPE="string"><VALUE>A user-friendly name for the object. This property allows each instance to define a user-friendly name in addition to its key properties, identity data, and description information. 
Note that the Name property of ManagedSystemElement is also defined as a user-friendly name. But, it is often subclassed to be a Key. It is not reasonable that the same property can convey both identity and a user-friendly name, without inconsistencies. Where Name exists and is not a Key (such as for instances of LogicalDevice), the same information can be present in both the Name and ElementName properties. Note that if there is an associated instance of CIM_EnabledLogicalElementCapabilities, restrictions on this properties may exist as defined in ElementNameMask and MaxElementNameLen properties defined in that class.</VALUE></QUALIFIER></PROPERTY><METHOD CLASSORIGIN="CIM_DiagnosticTest" NAME="RunTest" TYPE="uint32"><QUALIFIER TOSUBCLASS="false" NAME="Deprecated" TYPE="string"><VALUE.ARRAY><VALUE>CIM_DiagnosticService.RunDiagnostic</VALUE></VALUE.ARRAY></QUALIFIER><QUALIFIER TRANSLATABLE="true" NAME="Description" TYPE="string"><VALUE>This method is being deprecated and replaced by the RunDiagnostic method in the DiagnosticService class. 
The RunTest method executes this test for the specified ManagedSystemElement. The use of this method has been deprecated. Instead, the RunDiagnostic method (inherited from DiagnosticService) should be used. 
The RunTest method executes this test for the specified ManagedSystemElement (defined using the SystemElement input parameter). Results of the test are stored in a Diagnostic Result object, a reference to which is returned as the Result output parameter. How the test should execute, i.e. its settings, is defined in a DiagnosticSetting object (or by a subclass of DiagnosticSetting). A reference to a Setting object is specified using the Setting input parameter. If a reference is not passed into the method, then a default DiagnosticSetting may be used. This default Setting is associated with the DiagnoticTest using the DefaultSetting relationship of the Core Model. 
When RunTest starts execution, the settings, which are time sensitive, should be evaluated and captured. This is suggested since the DiagnosticSetting object can be modified at any time, and therefore the current test settings could be lost. 
The method&apos;s return codes are expected to adhere to the XML return codes as they are introduced. Currently, the standard return values are: 
0 = OK (function succeeded, but the test itself may have failed 
1 = Unspecified Error (function failed for unspecified reasons) 
2 = Not Implemented (function is not implemented for this instance) 
3 = Out Of Resources (component could not allocate required resources, e.g. memory, disk space, etc.) 
In a subclass, the set of possible return codes could be specified, using a ValueMap qualifier on the method. The strings to which the ValueMap contents are &apos;translated&apos; may also be specified in the subclass as a Values array qualifier.</VALUE></QUALIFIER><PARAMETER.REFERENCE REFERENCECLASS="CIM_ManagedSystemElement" NAME="SystemElement"><QUALIFIER OVERRIDABLE="false" NAME="IN" TYPE="boolean"><VALUE>true</VALUE></QUALIFIER><QUALIFIER TRANSLATABLE="true" NAME="Description" TYPE="string"><VALUE>The ManagedSystemElement on which the test will run.</VALUE></QUALIFIER></PARAMETER.REFERENCE><PARAMETER.REFERENCE REFERENCECLASS="CIM_DiagnosticSetting" NAME="Setting"><QUALIFIER OVERRIDABLE="false" NAME="IN" TYPE="boolean"><VALUE>true</VALUE></QUALIFIER><QUALIFIER TRANSLATABLE="true" NAME="Description" TYPE="string"><VALUE>How the test should execute, i.e. its settings, is defined in a DiagnosticSetting object (or by a subclass of DiagnosticSetting). A reference to a Setting object is specified using the Setting input parameter. If a reference is not passed into the method, then a default DiagnosticSetting may be used. This default Setting is associated with the DiagnoticTest using the DefaultSetting relationship of the Core Model.</VALUE></QUALIFIER></PARAMETER.REFERENCE><PARAMETER.REFERENCE REFERENCECLASS="CIM_DiagnosticResult" NAME="Result"><QUALIFIER OVERRIDABLE="false" NAME="IN" TYPE="boolean"><VALUE>false</VALUE></QUALIFIER><QUALIFIER OVERRIDABLE="false" NAME="OUT" TYPE="boolean"><VALUE>true</VALUE></QUALIFIER><QUALIFIER TRANSLATABLE="true" NAME="Description" TYPE="string"><VALUE>Results of the test are stored in a DiagnosticResult object, a reference to which is returned as the Result output parameter.</VALUE></QUALIFIER></PARAMETER.REFERENCE></METHOD><METHOD CLASSORIGIN="CIM_DiagnosticTest" NAME="ClearResults" TYPE="uint32"><QUALIFIER TOSUBCLASS="false" NAME="Deprecated" TYPE="string"><VALUE.ARRAY><VALUE>CIM_Log.ClearLog</VALUE></VALUE.ARRAY></QUALIFIER><QUALIFIER TRANSLATABLE="true" NAME="Description" TYPE="string"><VALUE>This method is deprecated in favor of using the corresponding functionality contained in the Log class, this is consistant with the deprecation of the Result class in favor of Log. 
Execution of this method will delete all instances of the DiagnosticResultForMSE object, for this DiagnosticTest and the specified ManagedSystemElement (defined using the SystemElement input parameter). The DiagnosticResults referenced in the DiagnosticResultForMSE instances will be deleted. Also the association DiagnosticResultForTest that refers to the DiagnosticResult object, and this test will be deleted. 
One output parameter is defined - ResultsNotCleared - which is a string array that lists the keys of the DiagnosticResults which could not be deleted. This information enables those Results to be revisited and either manually removed, or other corrective action taken. 
The method&apos;s return codes are expected to adhere to the XML return codes as they are introduced. Currently, the standard return values are: 
0 = OK (function succeeded, but the test itself may have failed) 
1 = Unspecified Error (function failed for unspecified reasons) 
2 = Not Implemented (function is not implemented for this instance) 
3 = Out Of Resources (component could not allocate required resources, e.g. memory, disk space, etc.) 
In a subclass, the set of possible return codes could be specified, using a ValueMap qualifier on the method. The strings to which the ValueMap contents are &apos;translated&apos; may also be specified in the subclass as a Values array qualifier.</VALUE></QUALIFIER><PARAMETER.REFERENCE REFERENCECLASS="CIM_ManagedSystemElement" NAME="SystemElement"><QUALIFIER OVERRIDABLE="false" NAME="IN" TYPE="boolean"><VALUE>true</VALUE></QUALIFIER><QUALIFIER TRANSLATABLE="true" NAME="Description" TYPE="string"><VALUE>The Managed System Element for which results will be cleared.</VALUE></QUALIFIER></PARAMETER.REFERENCE><PARAMETER.ARRAY NAME="ResultsNotCleared" TYPE="string"><QUALIFIER OVERRIDABLE="false" NAME="IN" TYPE="boolean"><VALUE>false</VALUE></QUALIFIER><QUALIFIER OVERRIDABLE="false" NAME="OUT" TYPE="boolean"><VALUE>true</VALUE></QUALIFIER><QUALIFIER TRANSLATABLE="true" NAME="Description" TYPE="string"><VALUE>A string array that lists the keys of the DiagnosticResults which could not be deleted.</VALUE></QUALIFIER></PARAMETER.ARRAY></METHOD><METHOD CLASSORIGIN="CIM_DiagnosticTest" NAME="DiscontinueTest" TYPE="uint32"><QUALIFIER TOSUBCLASS="false" NAME="Deprecated" TYPE="string"><VALUE.ARRAY><VALUE>CIM_ConcreteJob.RequestStateChange</VALUE></VALUE.ARRAY></QUALIFIER><QUALIFIER TRANSLATABLE="true" NAME="Description" TYPE="string"><VALUE>After invocation of this method and its completion, the specified test(s) will be discontinued for the indicated ManagedSystemElement (defined by the SystemElement input parameter). The test to discontinue is specified using the Result input parameter. If all instances of this test should be stopped for the SystemElement, then the Result reference should be NULL. Upon completion of the method, test status and other information (such as PercentComplete) will be stored in the DiagnosticResult instance defined by the Result input parameter. The output parameter, TestingStopped, is used as follows: 
Set to TRUE if testing was successfully stopped. 
Set to FALSE if the current test(s) can not be stopped. 
If set to FALSE, testing will stop when the diagnostic is able to do so safely. To determine if/when the testing is stopped, check the TestState property in the DiagnosticResult instance defined by the Result parameter. TestState will change from &quot;In Progress&quot; to &quot;Stopped&quot; (from 4 to 5). 
The method&apos;s return codes are expected to adhere to the XML return codes as they are introduced. Currently, the standard return values are: 
0 = OK (function succeeded, but the test itself may have failed 
1 = Unspecified Error (function failed for unspecified reasons) 
2 = Not Implemented (function is not implemented for this instance) 
3 = Out Of Resources (component could not allocate required resources, e.g. memory, disk space, etc.) 
In a subclass, the set of possible return codes could be specified, using a ValueMap qualifier on the method. The strings to which the ValueMap contents are &apos;translated&apos; may also be specified in the subclass as a Values array qualifier.</VALUE></QUALIFIER><PARAMETER.REFERENCE REFERENCECLASS="CIM_ManagedSystemElement" NAME="SystemElement"><QUALIFIER OVERRIDABLE="false" NAME="IN" TYPE="boolean"><VALUE>true</VALUE></QUALIFIER><QUALIFIER TRANSLATABLE="true" NAME="Description" TYPE="string"><VALUE>Testing will be discontinued for the indicated ManagedSystemElement defined by the SystemElement input parameter.</VALUE></QUALIFIER></PARAMETER.REFERENCE><PARAMETER.REFERENCE REFERENCECLASS="CIM_DiagnosticResult" NAME="Result"><QUALIFIER OVERRIDABLE="false" NAME="IN" TYPE="boolean"><VALUE>true</VALUE></QUALIFIER><QUALIFIER TRANSLATABLE="true" NAME="Description" TYPE="string"><VALUE>The test to discontinue is specified using the Result input parameter.</VALUE></QUALIFIER></PARAMETER.REFERENCE><PARAMETER NAME="TestingStopped" TYPE="boolean"><QUALIFIER OVERRIDABLE="false" NAME="IN" TYPE="boolean"><VALUE>false</VALUE></QUALIFIER><QUALIFIER OVERRIDABLE="false" NAME="OUT" TYPE="boolean"><VALUE>true</VALUE></QUALIFIER><QUALIFIER TRANSLATABLE="true" NAME="Description" TYPE="string"><VALUE>TestingStopped, is set to TRUE if testing was successfully stopped. It is set to FALSE if the current test(s) can not be stopped. If set to FALSE, testing will stop when the diagnostic is able to do so safely. To determine if/when the testing is stopped, check the TestState property in the DiagnosticResult instance defined by the Result parameter. TestState will change from &quot;In Progress&quot; to &quot;Stopped&quot; (from 4 to 5).</VALUE></QUALIFIER></PARAMETER></METHOD><METHOD CLASSORIGIN="CIM_DiagnosticService" PROPAGATED="true" NAME="RunDiagnostic" TYPE="uint32"><QUALIFIER TRANSLATABLE="true" NAME="Description" TYPE="string"><VALUE>The RunDiagnostic method executes this test for the specified ManagedSystemElement (defined using the SystemElement input parameter). The capabilities for the diagnostic service indicate where the results from the test job are stored. How the test should execute, i.e. its settings, is defined in a DiagnosticSetting object (or by a subclass of DiagnosticSetting). A reference to a Setting object is specified using the Setting input parameter. If a reference is not passed into the method, then a default DiagnosticSetting SHALL be used. 
When RunDiagnostic starts execution, the settings, which are time sensitive, SHOULD be evaluated and captured. This is suggested since the DiagnosticSetting object MAY be modified at any time, and therefore the current test settings could be lost. 
If 0 is returned, the function completed successfully and no ConcreteJob instance is created. If 0x1000 a ConcreteJob will be started.</VALUE></QUALIFIER><QUALIFIER NAME="ValueMap" TYPE="string"><VALUE.ARRAY><VALUE>0</VALUE><VALUE>1</VALUE><VALUE>2</VALUE><VALUE>3</VALUE><VALUE>4</VALUE><VALUE>5</VALUE><VALUE>..</VALUE><VALUE>0x1000</VALUE><VALUE>..</VALUE><VALUE>0x8000..</VALUE></VALUE.ARRAY></QUALIFIER><QUALIFIER TRANSLATABLE="true" NAME="Values" TYPE="string"><VALUE.ARRAY><VALUE>Job completed with no error</VALUE><VALUE>Not Supported</VALUE><VALUE>Unknown</VALUE><VALUE>Timeout</VALUE><VALUE>Failed</VALUE><VALUE>Invalid Parameter</VALUE><VALUE>DMTF Reserved</VALUE><VALUE>Method parameters checked - job started</VALUE><VALUE>Method Reserved</VALUE><VALUE>Vendor Specific</VALUE></VALUE.ARRAY></QUALIFIER><PARAMETER.REFERENCE REFERENCECLASS="CIM_ManagedElement" NAME="ManagedElement"><QUALIFIER OVERRIDABLE="false" NAME="IN" TYPE="boolean"><VALUE>true</VALUE></QUALIFIER><QUALIFIER TRANSLATABLE="true" NAME="Description" TYPE="string"><VALUE>Specifies the element upon which the DiagnosticService SHOULD be run.</VALUE></QUALIFIER></PARAMETER.REFERENCE><PARAMETER.REFERENCE REFERENCECLASS="CIM_DiagnosticSetting" NAME="DiagSetting"><QUALIFIER OVERRIDABLE="false" NAME="IN" TYPE="boolean"><VALUE>true</VALUE></QUALIFIER><QUALIFIER TRANSLATABLE="true" NAME="Description" TYPE="string"><VALUE>Specifies the desired settings that SHOULD be applied to the Diagnostic. If null, then the Diagnostic&apos;s defaults MAY be used.</VALUE></QUALIFIER></PARAMETER.REFERENCE><PARAMETER.REFERENCE REFERENCECLASS="CIM_JobSettingData" NAME="JobSetting"><QUALIFIER OVERRIDABLE="false" NAME="IN" TYPE="boolean"><VALUE>true</VALUE></QUALIFIER><QUALIFIER TRANSLATABLE="true" NAME="Description" TYPE="string"><VALUE>Specifies the desired settings that SHOULD be applied to the resulting Job. If null and a resulting Job is required (i.e., the Diagnostic is long running), then the test&apos;s defaults MAY be used.</VALUE></QUALIFIER></PARAMETER.REFERENCE><PARAMETER.REFERENCE REFERENCECLASS="CIM_ConcreteJob" NAME="Job"><QUALIFIER OVERRIDABLE="false" NAME="IN" TYPE="boolean"><VALUE>false</VALUE></QUALIFIER><QUALIFIER OVERRIDABLE="false" NAME="OUT" TYPE="boolean"><VALUE>true</VALUE></QUALIFIER><QUALIFIER TRANSLATABLE="true" NAME="Description" TYPE="string"><VALUE>Returns a handle to the resulting Job.</VALUE></QUALIFIER></PARAMETER.REFERENCE></METHOD><METHOD CLASSORIGIN="CIM_DiagnosticService" PROPAGATED="true" NAME="RunDiagnosticService" TYPE="uint32"><QUALIFIER TRANSLATABLE="true" NAME="Description" TYPE="string"><VALUE>The RunDiagnosticService method is invoked to commence execution of a diagnostic program on a specific managed element. The input parameters specify this managed element and the settings to be applied to the diagnostic and the resultant job. The method returns a reference to the ConcreteJob instance created. 
Prior to invoking this method, clients examine defaults and appropriate capabilities and create valid DiagnosticSettingData and JobSettingData instances to apply as input parameters. The RunDiagnosticService method SHALL evaluate and capture the attributes of DiagnosticSettingData in an instance of DiagnosticSettingDataRecord for use in post-mortem analysis of diagnostic results. 
A job SHALL be instantiated as a means for monitoring the diagnostic as it runs and to provide useful accounting and status information once the diagnostic has completed. 
The &quot;Busy&quot; return code indicates that the method cannot be invoked &quot;at this time&quot;. It is not an error condition, but signals that the provider is doing something else and cannot respond.</VALUE></QUALIFIER><QUALIFIER NAME="ValueMap" TYPE="string"><VALUE.ARRAY><VALUE>0</VALUE><VALUE>1</VALUE><VALUE>2</VALUE><VALUE>3</VALUE><VALUE>4</VALUE><VALUE>5</VALUE><VALUE>6</VALUE><VALUE>..</VALUE><VALUE>0x1000..0x7FFF</VALUE><VALUE>0x8000..</VALUE></VALUE.ARRAY></QUALIFIER><QUALIFIER TRANSLATABLE="true" NAME="Values" TYPE="string"><VALUE.ARRAY><VALUE>Success</VALUE><VALUE>Not Supported</VALUE><VALUE>Unknown</VALUE><VALUE>Timeout</VALUE><VALUE>Failed</VALUE><VALUE>Invalid Parameter</VALUE><VALUE>Busy</VALUE><VALUE>DMTF Reserved</VALUE><VALUE>Method Reserved</VALUE><VALUE>Vendor Specific</VALUE></VALUE.ARRAY></QUALIFIER><PARAMETER.REFERENCE REFERENCECLASS="CIM_ManagedElement" NAME="ManagedElement"><QUALIFIER OVERRIDABLE="false" NAME="IN" TYPE="boolean"><VALUE>true</VALUE></QUALIFIER><QUALIFIER TRANSLATABLE="true" NAME="Description" TYPE="string"><VALUE>Specifies the element upon which the DiagnosticService SHOULD be run.</VALUE></QUALIFIER></PARAMETER.REFERENCE><PARAMETER NAME="DiagnosticSettings" TYPE="string"><QUALIFIER OVERRIDABLE="false" NAME="IN" TYPE="boolean"><VALUE>true</VALUE></QUALIFIER><QUALIFIER TRANSLATABLE="true" NAME="Description" TYPE="string"><VALUE>A string containing an encoding of the DiagnosticSettingData instance to be applied to the diagnostic. If null, the diagnostic&apos;s defaults are used.</VALUE></QUALIFIER><QUALIFIER NAME="EmbeddedInstance" TYPE="string"><VALUE>CIM_DiagnosticSettingData</VALUE></QUALIFIER></PARAMETER><PARAMETER NAME="JobSettings" TYPE="string"><QUALIFIER OVERRIDABLE="false" NAME="IN" TYPE="boolean"><VALUE>true</VALUE></QUALIFIER><QUALIFIER TRANSLATABLE="true" NAME="Description" TYPE="string"><VALUE>A string containing an encoding of the JobSettingData instance to be applied to the resulting job. If null, the job&apos;s defaults are used.</VALUE></QUALIFIER><QUALIFIER NAME="EmbeddedInstance" TYPE="string"><VALUE>CIM_JobSettingData</VALUE></QUALIFIER></PARAMETER><PARAMETER.REFERENCE REFERENCECLASS="CIM_ConcreteJob" NAME="Job"><QUALIFIER OVERRIDABLE="false" NAME="IN" TYPE="boolean"><VALUE>false</VALUE></QUALIFIER><QUALIFIER OVERRIDABLE="false" NAME="OUT" TYPE="boolean"><VALUE>true</VALUE></QUALIFIER><QUALIFIER TRANSLATABLE="true" NAME="Description" TYPE="string"><VALUE>Returns a reference to the resulting Job.</VALUE></QUALIFIER></PARAMETER.REFERENCE></METHOD><METHOD CLASSORIGIN="CIM_Service" PROPAGATED="true" NAME="StartService" TYPE="uint32"><QUALIFIER TOSUBCLASS="false" NAME="Deprecated" TYPE="string"><VALUE.ARRAY><VALUE>CIM_Service.RequestStateChange</VALUE></VALUE.ARRAY></QUALIFIER><QUALIFIER TRANSLATABLE="true" NAME="Description" TYPE="string"><VALUE>The StartService method places the Service in the started state. Note that the function of this method overlaps with the RequestedState property. RequestedState was added to the model to maintain a record (such as a persisted value) of the last state request. Invoking the StartService method should set the RequestedState property appropriately. The method returns an integer value of 0 if the Service was successfully started, 1 if the request is not supported, and any other number to indicate an error. In a subclass, the set of possible return codes could be specified using a ValueMap qualifier on the method. The strings to which the ValueMap contents are translated can also be specified in the subclass as a Values array qualifier. 

Note: The semantics of this method overlap with the RequestStateChange method that is inherited from EnabledLogicalElement. This method is maintained because it has been widely implemented, and its simple &quot;start&quot; semantics are convenient to use.</VALUE></QUALIFIER></METHOD><METHOD CLASSORIGIN="CIM_Service" PROPAGATED="true" NAME="StopService" TYPE="uint32"><QUALIFIER TOSUBCLASS="false" NAME="Deprecated" TYPE="string"><VALUE.ARRAY><VALUE>CIM_Service.RequestStateChange</VALUE></VALUE.ARRAY></QUALIFIER><QUALIFIER TRANSLATABLE="true" NAME="Description" TYPE="string"><VALUE>The StopService method places the Service in the stopped state. Note that the function of this method overlaps with the RequestedState property. RequestedState was added to the model to maintain a record (such as a persisted value) of the last state request. Invoking the StopService method should set the RequestedState property appropriately. The method returns an integer value of 0 if the Service was successfully stopped, 1 if the request is not supported, and any other number to indicate an error. In a subclass, the set of possible return codes could be specified using a ValueMap qualifier on the method. The strings to which the ValueMap contents are translated can also be specified in the subclass as a Values array qualifier. 

Note: The semantics of this method overlap with the RequestStateChange method that is inherited from EnabledLogicalElement. This method is maintained because it has been widely implemented, and its simple &quot;stop&quot; semantics are convenient to use.</VALUE></QUALIFIER></METHOD><METHOD CLASSORIGIN="CIM_EnabledLogicalElement" PROPAGATED="true" NAME="RequestStateChange" TYPE="uint32"><QUALIFIER TRANSLATABLE="true" NAME="Description" TYPE="string"><VALUE>Requests that the state of the element be changed to the value specified in the RequestedState parameter. When the requested state change takes place, the EnabledState and RequestedState of the element will be the same. Invoking the RequestStateChange method multiple times could result in earlier requests being overwritten or lost. 
A return code of 0 shall indicate the state change was successfully initiated. 
A return code of 3 shall indicate that the state transition cannot complete within the interval specified by the TimeoutPeriod parameter. 
A return code of 4096 (0x1000) shall indicate the state change was successfully initiated, a ConcreteJob has been created, and its reference returned in the output parameter Job. Any other return code indicates an error condition.</VALUE></QUALIFIER><QUALIFIER NAME="ValueMap" TYPE="string"><VALUE.ARRAY><VALUE>0</VALUE><VALUE>1</VALUE><VALUE>2</VALUE><VALUE>3</VALUE><VALUE>4</VALUE><VALUE>5</VALUE><VALUE>6</VALUE><VALUE>..</VALUE><VALUE>4096</VALUE><VALUE>4097</VALUE><VALUE>4098</VALUE><VALUE>4099</VALUE><VALUE>4100..32767</VALUE><VALUE>32768..65535</VALUE></VALUE.ARRAY></QUALIFIER><QUALIFIER TRANSLATABLE="true" NAME="Values" TYPE="string"><VALUE.ARRAY><VALUE>Completed with No Error</VALUE><VALUE>Not Supported</VALUE><VALUE>Unknown or Unspecified Error</VALUE><VALUE>Cannot complete within Timeout Period</VALUE><VALUE>Failed</VALUE><VALUE>Invalid Parameter</VALUE><VALUE>In Use</VALUE><VALUE>DMTF Reserved</VALUE><VALUE>Method Parameters Checked - Job Started</VALUE><VALUE>Invalid State Transition</VALUE><VALUE>Use of Timeout Parameter Not Supported</VALUE><VALUE>Busy</VALUE><VALUE>Method Reserved</VALUE><VALUE>Vendor Specific</VALUE></VALUE.ARRAY></QUALIFIER><QUALIFIER NAME="ModelCorrespondence" TYPE="string"><VALUE.ARRAY><VALUE>CIM_EnabledLogicalElement.RequestedState</VALUE></VALUE.ARRAY></QUALIFIER><PARAMETER NAME="RequestedState" TYPE="uint16"><QUALIFIER OVERRIDABLE="false" NAME="IN" TYPE="boolean"><VALUE>true</VALUE></QUALIFIER><QUALIFIER TRANSLATABLE="true" NAME="Description" TYPE="string"><VALUE>The state requested for the element. This information will be placed into the RequestedState property of the instance if the return code of the RequestStateChange method is 0 (&apos;Completed with No Error&apos;), or 4096 (0x1000) (&apos;Job Started&apos;). Refer to the description of the EnabledState and RequestedState properties for the detailed explanations of the RequestedState values.</VALUE></QUALIFIER><QUALIFIER NAME="ValueMap" TYPE="string"><VALUE.ARRAY><VALUE>2</VALUE><VALUE>3</VALUE><VALUE>4</VALUE><VALUE>6</VALUE><VALUE>7</VALUE><VALUE>8</VALUE><VALUE>9</VALUE><VALUE>10</VALUE><VALUE>11</VALUE><VALUE>..</VALUE><VALUE>32768..65535</VALUE></VALUE.ARRAY></QUALIFIER><QUALIFIER TRANSLATABLE="true" NAME="Values" TYPE="string"><VALUE.ARRAY><VALUE>Enabled</VALUE><VALUE>Disabled</VALUE><VALUE>Shut Down</VALUE><VALUE>Offline</VALUE><VALUE>Test</VALUE><VALUE>Defer</VALUE><VALUE>Quiesce</VALUE><VALUE>Reboot</VALUE><VALUE>Reset</VALUE><VALUE>DMTF Reserved</VALUE><VALUE>Vendor Reserved</VALUE></VALUE.ARRAY></QUALIFIER><QUALIFIER NAME="ModelCorrespondence" TYPE="string"><VALUE.ARRAY><VALUE>CIM_EnabledLogicalElement.RequestedState</VALUE></VALUE.ARRAY></QUALIFIER></PARAMETER><PARAMETER.REFERENCE REFERENCECLASS="CIM_ConcreteJob" NAME="Job"><QUALIFIER OVERRIDABLE="false" NAME="IN" TYPE="boolean"><VALUE>false</VALUE></QUALIFIER><QUALIFIER OVERRIDABLE="false" NAME="OUT" TYPE="boolean"><VALUE>true</VALUE></QUALIFIER><QUALIFIER TRANSLATABLE="true" NAME="Description" TYPE="string"><VALUE>May contain a reference to the ConcreteJob created to track the state transition initiated by the method invocation.</VALUE></QUALIFIER></PARAMETER.REFERENCE><PARAMETER NAME="TimeoutPeriod" TYPE="datetime"><QUALIFIER OVERRIDABLE="false" NAME="IN" TYPE="boolean"><VALUE>true</VALUE></QUALIFIER><QUALIFIER TRANSLATABLE="true" NAME="Description" TYPE="string"><VALUE>A timeout period that specifies the maximum amount of time that the client expects the transition to the new state to take. The interval format must be used to specify the TimeoutPeriod. A value of 0 or a null parameter indicates that the client has no time requirements for the transition. 
If this property does not contain 0 or null and the implementation does not support this parameter, a return code of &apos;Use Of Timeout Parameter Not Supported&apos; shall be returned.</VALUE></QUALIFIER></PARAMETER></METHOD></CLASS></VALUE.OBJECT></DECLGROUP></DECLARATION></CIM>
