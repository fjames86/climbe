<?xml version="1.0"?>
<CIM CIMVERSION="2.3" DTDVERSION="2.2"><DECLARATION><DECLGROUP><VALUE.OBJECT>
<CLASS SUPERCLASS="CIM_ManagedElement" NAME="CIM_Policy"><QUALIFIER TOSUBCLASS="false" NAME="Abstract" TYPE="boolean"><VALUE>true</VALUE></QUALIFIER><QUALIFIER TOSUBCLASS="false" TRANSLATABLE="true" NAME="Version" TYPE="string"><VALUE>2.6.0</VALUE></QUALIFIER><QUALIFIER NAME="UMLPackagePath" TYPE="string"><VALUE>CIM::Policy</VALUE></QUALIFIER><QUALIFIER TRANSLATABLE="true" NAME="Description" TYPE="string"><VALUE>An abstract class defining the common properties of the policy managed elements derived from CIM_Policy. The subclasses are used to create rules and groups of rules that work together to form a coherent set of policies within an administrative domain or set of domains.</VALUE></QUALIFIER><PROPERTY CLASSORIGIN="CIM_Policy" PROPAGATED="false" NAME="CommonName" TYPE="string"><QUALIFIER TRANSLATABLE="true" NAME="Description" TYPE="string"><VALUE>A user-friendly name of this policy-related object.</VALUE></QUALIFIER></PROPERTY><PROPERTY.ARRAY CLASSORIGIN="CIM_Policy" PROPAGATED="false" NAME="PolicyKeywords" TYPE="string"><QUALIFIER TRANSLATABLE="true" NAME="Description" TYPE="string"><VALUE>An array of keywords for characterizing / categorizing policy objects. Keywords are of one of two types: 
- Keywords defined in this and other MOFs, or in DMTF white papers. These keywords provide a vendor- independent, installation-independent way of characterizing policy objects. 
- Installation-dependent keywords for characterizing policy objects. Examples include &apos;Engineering&apos;, &apos;Billing&apos;, and &apos;Review in December 2000&apos;. 
This MOF defines the following keywords: &apos;UNKNOWN&apos;, &apos;CONFIGURATION&apos;, &apos;USAGE&apos;, &apos;SECURITY&apos;, &apos;SERVICE&apos;, &apos;MOTIVATIONAL&apos;, &apos;INSTALLATION&apos;, and &apos;EVENT&apos;. These concepts are self-explanatory and are further discussed in the SLA/Policy White Paper. One additional keyword is defined: &apos;POLICY&apos;. The role of this keyword is to identify policy-related instances that may not be otherwise identifiable, in some implementations. The keyword &apos;POLICY&apos; is NOT mutually exclusive of the other keywords specified above.</VALUE></QUALIFIER></PROPERTY.ARRAY><PROPERTY CLASSORIGIN="CIM_ManagedElement" PROPAGATED="true" NAME="InstanceID" TYPE="string"><QUALIFIER TRANSLATABLE="true" NAME="Description" TYPE="string"><VALUE>InstanceID is an optional property that may be used to opaquely and uniquely identify an instance of this class within the scope of the instantiating Namespace. Various subclasses of this class may override this property to make it required, or a key. Such subclasses may also modify the preferred algorithms for ensuring uniqueness that are defined below.
To ensure uniqueness within the NameSpace, the value of InstanceID should be constructed using the following &quot;preferred&quot; algorithm: 
&lt;OrgID&gt;:&lt;LocalID&gt; 
Where &lt;OrgID&gt; and &lt;LocalID&gt; are separated by a colon (:), and where &lt;OrgID&gt; must include a copyrighted, trademarked, or otherwise unique name that is owned by the business entity that is creating or defining the InstanceID or that is a registered ID assigned to the business entity by a recognized global authority. (This requirement is similar to the &lt;Schema Name&gt;_&lt;Class Name&gt; structure of Schema class names.) In addition, to ensure uniqueness, &lt;OrgID&gt; must not contain a colon (:). When using this algorithm, the first colon to appear in InstanceID must appear between &lt;OrgID&gt; and &lt;LocalID&gt;. 
&lt;LocalID&gt; is chosen by the business entity and should not be reused to identify different underlying (real-world) elements. If not null and the above &quot;preferred&quot; algorithm is not used, the defining entity must assure that the resulting InstanceID is not reused across any InstanceIDs produced by this or other providers for the NameSpace of this instance. 
If not set to null for DMTF-defined instances, the &quot;preferred&quot; algorithm must be used with the &lt;OrgID&gt; set to CIM.</VALUE></QUALIFIER></PROPERTY><PROPERTY CLASSORIGIN="CIM_ManagedElement" PROPAGATED="true" NAME="Caption" TYPE="string"><QUALIFIER TRANSLATABLE="true" NAME="Description" TYPE="string"><VALUE>The Caption property is a short textual description (one- line string) of the object.</VALUE></QUALIFIER><QUALIFIER NAME="MaxLen" TYPE="uint32"><VALUE>64</VALUE></QUALIFIER></PROPERTY><PROPERTY CLASSORIGIN="CIM_ManagedElement" PROPAGATED="true" NAME="Description" TYPE="string"><QUALIFIER TRANSLATABLE="true" NAME="Description" TYPE="string"><VALUE>The Description property provides a textual description of the object.</VALUE></QUALIFIER></PROPERTY><PROPERTY CLASSORIGIN="CIM_ManagedElement" PROPAGATED="true" NAME="ElementName" TYPE="string"><QUALIFIER TRANSLATABLE="true" NAME="Description" TYPE="string"><VALUE>A user-friendly name for the object. This property allows each instance to define a user-friendly name in addition to its key properties, identity data, and description information. 
Note that the Name property of ManagedSystemElement is also defined as a user-friendly name. But, it is often subclassed to be a Key. It is not reasonable that the same property can convey both identity and a user-friendly name, without inconsistencies. Where Name exists and is not a Key (such as for instances of LogicalDevice), the same information can be present in both the Name and ElementName properties. Note that if there is an associated instance of CIM_EnabledLogicalElementCapabilities, restrictions on this properties may exist as defined in ElementNameMask and MaxElementNameLen properties defined in that class.</VALUE></QUALIFIER></PROPERTY></CLASS></VALUE.OBJECT></DECLGROUP></DECLARATION></CIM>
