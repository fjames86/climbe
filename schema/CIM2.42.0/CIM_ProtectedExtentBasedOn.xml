<?xml version="1.0"?>
<CIM CIMVERSION="2.3" DTDVERSION="2.2"><DECLARATION><DECLGROUP><VALUE.OBJECT>
<CLASS SUPERCLASS="CIM_BasedOn" NAME="CIM_ProtectedExtentBasedOn"><QUALIFIER OVERRIDABLE="false" NAME="Association" TYPE="boolean"><VALUE>true</VALUE></QUALIFIER><QUALIFIER TOSUBCLASS="false" TRANSLATABLE="true" NAME="Version" TYPE="string"><VALUE>2.7.0</VALUE></QUALIFIER><QUALIFIER NAME="UMLPackagePath" TYPE="string"><VALUE>CIM::Device::StorageExtents</VALUE></QUALIFIER><QUALIFIER TRANSLATABLE="true" NAME="Description" TYPE="string"><VALUE>Protected StorageExtents map to an underlying StorageExtent. This mapping includes information about the placement of check data on the underlying extent. The mapping is made explicit in this association.</VALUE></QUALIFIER><PROPERTY.REFERENCE CLASSORIGIN="CIM_ProtectedExtentBasedOn" PROPAGATED="false" REFERENCECLASS="CIM_StorageExtent" NAME="Antecedent"><QUALIFIER TOSUBCLASS="false" NAME="Override" TYPE="string"><VALUE>Antecedent</VALUE></QUALIFIER><QUALIFIER TRANSLATABLE="true" NAME="Description" TYPE="string"><VALUE>The underlying StorageExtent.</VALUE></QUALIFIER><QUALIFIER OVERRIDABLE="false" NAME="Key" TYPE="boolean"><VALUE>true</VALUE></QUALIFIER></PROPERTY.REFERENCE><PROPERTY.REFERENCE CLASSORIGIN="CIM_ProtectedExtentBasedOn" PROPAGATED="false" REFERENCECLASS="CIM_StorageExtent" NAME="Dependent"><QUALIFIER TOSUBCLASS="false" NAME="Override" TYPE="string"><VALUE>Dependent</VALUE></QUALIFIER><QUALIFIER TRANSLATABLE="true" NAME="Description" TYPE="string"><VALUE>The Protected Space is built on this StorageExtent.</VALUE></QUALIFIER><QUALIFIER OVERRIDABLE="false" NAME="Key" TYPE="boolean"><VALUE>true</VALUE></QUALIFIER></PROPERTY.REFERENCE><PROPERTY CLASSORIGIN="CIM_ProtectedExtentBasedOn" PROPAGATED="false" NAME="StartingAddress" TYPE="uint64"><QUALIFIER TOSUBCLASS="false" NAME="Override" TYPE="string"><VALUE>StartingAddress</VALUE></QUALIFIER><QUALIFIER TRANSLATABLE="true" NAME="Description" TYPE="string"><VALUE>The starting logical block address of the underlying StorageExtent from which this protected StorageExtent is derived. In SCC, this is equivalent to the START LBA_P field in the Redundancy Group P_Extent Descriptor.</VALUE></QUALIFIER><QUALIFIER NAME="MappingStrings" TYPE="string"><VALUE.ARRAY><VALUE>MIF.DMTF|Physical Extent|001.2</VALUE></VALUE.ARRAY></QUALIFIER></PROPERTY><PROPERTY CLASSORIGIN="CIM_ProtectedExtentBasedOn" PROPAGATED="false" NAME="NumberOfBlocks" TYPE="uint64"><QUALIFIER TRANSLATABLE="true" NAME="Description" TYPE="string"><VALUE>The size of the protected space. Note that this is limited by the Antecedent-&gt;NumberOfBlocks, but is included explicitly to provide for the DMTF MIF mapping. In SCC, this is equivalent to the NUMBER OF LBA_P(s) field in the Redundancy Group P_Extent Descriptor.</VALUE></QUALIFIER><QUALIFIER NAME="MappingStrings" TYPE="string"><VALUE.ARRAY><VALUE>MIF.DMTF|Physical Extent|001.3</VALUE></VALUE.ARRAY></QUALIFIER><QUALIFIER NAME="ModelCorrespondence" TYPE="string"><VALUE.ARRAY><VALUE>CIM_StorageExtent.NumberOfBlocks</VALUE></VALUE.ARRAY></QUALIFIER></PROPERTY><PROPERTY CLASSORIGIN="CIM_ProtectedExtentBasedOn" PROPAGATED="false" NAME="BlockSize" TYPE="uint64"><QUALIFIER TRANSLATABLE="true" NAME="Description" TYPE="string"><VALUE>The block size of the protected space. Note that this is limited by the Antecedent-&gt;BlockSize. In SCC, this is equivalent to the NUMBER OF BYTES PER LBA_P field in the Redundancy Group P_Extent Descriptor.</VALUE></QUALIFIER><QUALIFIER TRANSLATABLE="true" NAME="Units" TYPE="string"><VALUE>Bytes</VALUE></QUALIFIER><QUALIFIER NAME="MappingStrings" TYPE="string"><VALUE.ARRAY><VALUE>MIF.DMTF|Physical Extent|001.4</VALUE></VALUE.ARRAY></QUALIFIER><QUALIFIER NAME="ModelCorrespondence" TYPE="string"><VALUE.ARRAY><VALUE>CIM_StorageExtent.BlockSize</VALUE></VALUE.ARRAY></QUALIFIER><QUALIFIER NAME="PUnit" TYPE="string"><VALUE>byte</VALUE></QUALIFIER></PROPERTY><PROPERTY CLASSORIGIN="CIM_ProtectedExtentBasedOn" PROPAGATED="false" NAME="UnitsBeforeCheckDataInterleave" TYPE="uint64"><QUALIFIER TRANSLATABLE="true" NAME="Description" TYPE="string"><VALUE>Number of bytes of user data to skip before starting the check data interleave.</VALUE></QUALIFIER><QUALIFIER TRANSLATABLE="true" NAME="Units" TYPE="string"><VALUE>Bytes</VALUE></QUALIFIER><QUALIFIER NAME="MappingStrings" TYPE="string"><VALUE.ARRAY><VALUE>MIF.DMTF|Physical Extent|001.6</VALUE></VALUE.ARRAY></QUALIFIER><QUALIFIER NAME="PUnit" TYPE="string"><VALUE>byte</VALUE></QUALIFIER></PROPERTY><PROPERTY CLASSORIGIN="CIM_ProtectedExtentBasedOn" PROPAGATED="false" NAME="UnitsOfCheckData" TYPE="uint64"><QUALIFIER TRANSLATABLE="true" NAME="Description" TYPE="string"><VALUE>Number of bytes to be reserved for check data.</VALUE></QUALIFIER><QUALIFIER TRANSLATABLE="true" NAME="Units" TYPE="string"><VALUE>Bytes</VALUE></QUALIFIER><QUALIFIER NAME="MappingStrings" TYPE="string"><VALUE.ARRAY><VALUE>MIF.DMTF|Physical Extent|001.7</VALUE></VALUE.ARRAY></QUALIFIER><QUALIFIER NAME="PUnit" TYPE="string"><VALUE>byte</VALUE></QUALIFIER></PROPERTY><PROPERTY CLASSORIGIN="CIM_ProtectedExtentBasedOn" PROPAGATED="false" NAME="UnitsOfUserData" TYPE="uint64"><QUALIFIER TRANSLATABLE="true" NAME="Description" TYPE="string"><VALUE>Number of bytes to be reserved for user data.</VALUE></QUALIFIER><QUALIFIER TRANSLATABLE="true" NAME="Units" TYPE="string"><VALUE>Bytes</VALUE></QUALIFIER><QUALIFIER NAME="MappingStrings" TYPE="string"><VALUE.ARRAY><VALUE>MIF.DMTF|Physical Extent|001.8</VALUE></VALUE.ARRAY></QUALIFIER><QUALIFIER NAME="PUnit" TYPE="string"><VALUE>byte</VALUE></QUALIFIER></PROPERTY><PROPERTY CLASSORIGIN="CIM_BasedOn" PROPAGATED="true" NAME="EndingAddress" TYPE="uint64"><QUALIFIER TRANSLATABLE="true" NAME="Description" TYPE="string"><VALUE>EndingAddress indicates where in lower level storage, the higher level Extent ends. This property is useful when mapping non-contiguous Extents into a higher level grouping.</VALUE></QUALIFIER></PROPERTY><PROPERTY CLASSORIGIN="CIM_BasedOn" PROPAGATED="true" NAME="OrderIndex" TYPE="uint16"><QUALIFIER TRANSLATABLE="true" NAME="Description" TYPE="string"><VALUE>If there is an order to the BasedOn associations that describe how a higher level StorageExtent is assembled, the OrderIndex property indicates this. When an order exists, the instances of BasedOn with the same Dependent value (i.e., the same higher level Extent) should place unique values in the OrderIndex property. The lowest value implies the first member of the collection of lower level Extents, and increasing values imply successive members of the collection. If there is no ordered relationship, a value of zero should be specified. An example of the use of this property is to define a RAID-0 striped array of 3 disks. The resultant RAID array is a StorageExtent that is dependent on (BasedOn) the StorageExtents that describe each of the 3 disks. The OrderIndex of each BasedOn association from the disk Extents to the RAID array could be specified as 1, 2 and 3 to indicate the order in which the disk Extents are used to access the RAID data.</VALUE></QUALIFIER></PROPERTY></CLASS></VALUE.OBJECT></DECLGROUP></DECLARATION></CIM>
